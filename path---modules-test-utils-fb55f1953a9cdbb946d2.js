webpackJsonp([25881880502388],{513:function(e,t){e.exports={pathContext:{docs:{id:1121,name:'"test-utils"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/test-utils.ts",children:[{id:1180,name:"ControllerTestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to a react component and mounting\ntest components using enzyme.",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:1181,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1187,name:"instance",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The subject of the test fixture (component, service, plugin, etc)"},sources:[{fileName:"test-utils.ts",line:26,character:19}],type:{type:"typeParameter",name:"T"},inheritedFrom:{type:"reference",name:"TestFixture.instance",id:1128}},{id:1233,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current page location"},sources:[{fileName:"test-utils.ts",line:65,character:10}],type:{type:"reference",name:"Location",id:689},inheritedFrom:{type:"reference",name:"TestFixture.location",id:1174}},{id:1188,name:"apply",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1189,name:"apply",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Apply a property decorator to instance and return the result of the decorated property."},typeParameter:[{id:1190,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1191,name:"decorator",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"PropertyDecorator"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1129}}],sources:[{fileName:"test-utils.ts",line:31,character:7}],inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1129}},{id:1197,name:"applySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1198,name:"applySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return the selected value."},typeParameter:[{id:1199,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1200,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1201,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1202,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1203,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1204,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1205,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1200}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:41,character:35}]}}},{id:1206,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1200}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1138}}],sources:[{fileName:"test-utils.ts",line:41,character:15}],inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1138}},{id:1192,name:"applyService",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1193,name:"applyService",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a service to instance and return the instance of the service."},typeParameter:[{id:1194,name:"S",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:693}}],parameters:[{id:1195,name:"serviceType",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1196,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:36,character:46}]}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"S",constraint:{type:"reference",name:"Service",id:693}}]},inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1133}}],sources:[{fileName:"test-utils.ts",line:36,character:14}],inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1133}},{id:1227,name:"getPlugin",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1228,name:"getPlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Get a plugin of a specified type. If it exists, it will be returned.\nIf it does not exist, an exception is thrown."},typeParameter:[{id:1229,name:"T",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:712}}],parameters:[{id:1230,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to search for.\n"},type:{type:"reference",name:"PluginConstructor",id:166,typeArguments:[{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:712}}]}}],type:{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:712}},inheritedFrom:{type:"reference",name:"TestFixture.getPlugin",id:1168}}],sources:[{fileName:"test-utils.ts",line:59,character:11}],inheritedFrom:{type:"reference",name:"TestFixture.getPlugin",id:1168}},{id:1217,name:"nextValueOf",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1218,name:"nextValueOf",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return a promise that resolves on the next value change."},typeParameter:[{id:1219,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1220,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1221,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1222,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1223,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1224,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1225,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1220}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:51,character:33}]}}},{id:1226,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1220}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1158}}],sources:[{fileName:"test-utils.ts",line:51,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1158}},{id:1182,name:"render",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1183,name:"render",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Render the test case into an Enzyme wrapper suitable for performing assertions against"},type:{type:"intrinsic",name:"any"}}],sources:[{fileName:"test-utils.ts",line:81,character:8}]},{id:1207,name:"spySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1208,name:"spySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return an array that fills with each new selected value."},typeParameter:[{id:1209,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1210,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1211,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1212,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1213,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1214,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1215,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1210}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:46,character:33}]}}},{id:1216,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1210}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"array",elementType:{type:"typeParameter",name:"T"}}]},inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1148}}],sources:[{fileName:"test-utils.ts",line:46,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1148}},{id:1231,name:"unmount",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1232,name:"unmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Unmount the test case"},type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"TestFixture.unmount",id:1172}}],sources:[{fileName:"test-utils.ts",line:62,character:9}],inheritedFrom:{type:"reference",name:"TestFixture.unmount",id:1172}},{id:1184,name:"waitForController",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1185,name:"waitForController",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Return a promise that resolves when a controller of a specific type has finished loading.\nUseful for waiting until an async action has completed before making a test assertion."},parameters:[{id:1186,name:"type",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ComponentClass"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"intrinsic",name:"void"}]}}],sources:[{fileName:"test-utils.ts",line:87,character:19}]}],groups:[{title:"Properties",kind:1024,children:[1187,1233]},{title:"Methods",kind:2048,children:[1188,1197,1192,1227,1217,1182,1207,1231,1184]}],sources:[{fileName:"test-utils.ts",line:79,character:38}],extendedTypes:[{type:"reference",name:"TestFixture",id:1126,typeArguments:[{type:"typeParameter",name:"T"}]}]},{id:1175,name:"ControllerTestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:1179,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Optional base url provided to application services. Defaults to http://localhost"},sources:[{fileName:"test-utils.ts",line:13,character:9}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.baseUrl",id:1125}},{id:1178,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Location string used to match route. Defaults to '/'"},sources:[{fileName:"test-utils.ts",line:10,character:10}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.location",id:1124}},{id:1176,name:"markup",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Markup to render in the specified fixture’s context"},sources:[{fileName:"test-utils.ts",line:70,character:8}],type:{type:"reference",name:"ReactElement",typeArguments:[{type:"reference",name:"__type"}]}},{id:1177,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:7,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:166}},inheritedFrom:{type:"reference",name:"TestFixtureProps.plugins",id:1123}}],groups:[{title:"Properties",kind:1024,children:[1179,1178,1176,1177]}],sources:[{fileName:"test-utils.ts",line:68,character:43}],extendedTypes:[{type:"reference",name:"TestFixtureProps",id:1122}]},{id:1242,name:"ServiceTestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to a service, including lifecycle hooks and injecting all dependencies",text:"You can optionally provide an array of plugins, which should generally be stub implementations\nof interfaces used in your applications. These can be stubbed using the `stub()` method.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:1243,name:"ServiceType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:693}}],children:[{id:1252,name:"instance",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The subject of the test fixture (component, service, plugin, etc)"},sources:[{fileName:"test-utils.ts",line:26,character:19}],type:{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:693}},inheritedFrom:{type:"reference",name:"TestFixture.instance",id:1128}},{id:1251,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current page location"},sources:[{fileName:"test-utils.ts",line:123,character:10}],type:{type:"reference",name:"Location",id:689},overwrites:{type:"reference",name:"TestFixture.location",id:1174}},{id:1244,name:"service",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"test-utils.ts",line:109,character:18}],type:{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:693}}},{id:1253,name:"apply",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1254,name:"apply",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Apply a property decorator to instance and return the result of the decorated property."},typeParameter:[{id:1255,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1256,name:"decorator",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"PropertyDecorator"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1129}}],sources:[{fileName:"test-utils.ts",line:31,character:7}],inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1129}},{id:1262,name:"applySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1263,name:"applySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return the selected value."},typeParameter:[{id:1264,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1265,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1266,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1267,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1268,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1269,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1270,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1265}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:41,character:35}]}}},{id:1271,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1265}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1138}}],sources:[{fileName:"test-utils.ts",line:41,character:15}],inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1138}},{id:1257,name:"applyService",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1258,name:"applyService",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a service to instance and return the instance of the service."},typeParameter:[{id:1259,name:"S",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:693}}],parameters:[{id:1260,name:"serviceType",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1261,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:36,character:46}]}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"S",constraint:{type:"reference",name:"Service",id:693}}]},inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1133}}],sources:[{fileName:"test-utils.ts",line:36,character:14}],inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1133}},{id:1245,name:"getPlugin",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1246,name:"getPlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Get a plugin of a specified type. If it exists, it will be returned.\nIf it does not exist, an exception is thrown."},typeParameter:[{id:1247,name:"PluginType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:712}}],parameters:[{id:1248,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to search for.\n"},type:{type:"reference",name:"PluginConstructor",id:166,typeArguments:[{type:"typeParameter",name:"PluginType",constraint:{type:"reference",name:"PluginConfig",id:712}}]}}],type:{type:"typeParameter",name:"PluginType",constraint:{type:"reference",name:"PluginConfig",id:712}},overwrites:{type:"reference",name:"TestFixture.getPlugin",id:1168}}],sources:[{fileName:"test-utils.ts",line:117,character:11}],overwrites:{type:"reference",name:"TestFixture.getPlugin",id:1168}},{id:1282,name:"nextValueOf",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1283,name:"nextValueOf",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return a promise that resolves on the next value change."},typeParameter:[{id:1284,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1285,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1286,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1287,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1288,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1289,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1290,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1285}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:51,character:33}]}}},{id:1291,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1285}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1158}}],sources:[{fileName:"test-utils.ts",line:51,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1158}},{id:1272,name:"spySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1273,name:"spySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return an array that fills with each new selected value."},typeParameter:[{id:1274,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1275,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1276,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1277,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1278,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1279,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1280,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1275}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:46,character:33}]}}},{id:1281,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1275}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"array",elementType:{type:"typeParameter",name:"T"}}]},inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1148}}],sources:[{fileName:"test-utils.ts",line:46,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1148}},{id:1249,name:"unmount",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1250,name:"unmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Unmount the test case"},type:{type:"intrinsic",name:"void"},overwrites:{type:"reference",name:"TestFixture.unmount",id:1172}}],sources:[{fileName:"test-utils.ts",line:120,character:9}],overwrites:{type:"reference",name:"TestFixture.unmount",id:1172}}],groups:[{title:"Properties",kind:1024,children:[1252,1251,1244]},{title:"Methods",kind:2048,children:[1253,1262,1257,1245,1282,1272,1249]}],sources:[{fileName:"test-utils.ts",line:108,character:35}],extendedTypes:[{type:"reference",name:"TestFixture",id:1126,typeArguments:[{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:693}}]}]},{id:1234,name:"ServiceTestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},typeParameter:[{id:1235,name:"ServiceType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:693,typeArguments:[{type:"intrinsic",name:"any"}]}}],children:[{id:1241,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Optional base url provided to application services. Defaults to http://localhost"},sources:[{fileName:"test-utils.ts",line:13,character:9}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.baseUrl",id:1125}},{id:1240,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Location string used to match route. Defaults to '/'"},sources:[{fileName:"test-utils.ts",line:10,character:10}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.location",id:1124}},{id:1239,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:7,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:166}},inheritedFrom:{type:"reference",name:"TestFixtureProps.plugins",id:1123}},{id:1238,name:"props",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},sources:[{fileName:"test-utils.ts",line:97,character:7}],type:{type:"intrinsic",name:"any"}},{id:1236,name:"service",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Tested service"},sources:[{fileName:"test-utils.ts",line:96,character:9}],type:{type:"reflection",declaration:{id:1237,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:96,character:10}]}}}],groups:[{title:"Properties",kind:1024,children:[1241,1240,1239,1238,1236]}],sources:[{fileName:"test-utils.ts",line:94,character:40}],extendedTypes:[{type:"reference",name:"TestFixtureProps",id:1122}]},{id:1126,name:"TestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to classes that require it.",text:"You can optionally provide an array of plugins, which should generally be stub implementations\nof interfaces used in your applications. These can be stubbed using the `stub()` method.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:1127,name:"Instance",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1128,name:"instance",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The subject of the test fixture (component, service, plugin, etc)"},sources:[{fileName:"test-utils.ts",line:26,character:19}],type:{type:"typeParameter",name:"Instance"}},{id:1174,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current page location"},sources:[{fileName:"test-utils.ts",line:65,character:10}],type:{type:"reference",name:"Location",id:689}},{id:1129,name:"apply",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1130,name:"apply",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Apply a property decorator to instance and return the result of the decorated property."},typeParameter:[{id:1131,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1132,name:"decorator",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"PropertyDecorator"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]}}],sources:[{fileName:"test-utils.ts",line:31,character:7}]},{id:1138,name:"applySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1139,name:"applySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return the selected value."},typeParameter:[{id:1140,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1141,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1142,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1143,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1144,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1145,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1146,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1141}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:41,character:35}]}}},{id:1147,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1141}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]}}],sources:[{fileName:"test-utils.ts",line:41,character:15}]},{id:1133,name:"applyService",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1134,name:"applyService",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a service to instance and return the instance of the service."},typeParameter:[{id:1135,name:"S",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:693}}],parameters:[{id:1136,name:"serviceType",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1137,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:36,character:46}]}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"S",constraint:{type:"reference",name:"Service",id:693}}]}}],sources:[{fileName:"test-utils.ts",line:36,character:14}]},{id:1168,name:"getPlugin",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1169,name:"getPlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Get a plugin of a specified type. If it exists, it will be returned.\nIf it does not exist, an exception is thrown."},typeParameter:[{id:1170,name:"T",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:712}}],parameters:[{id:1171,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to search for.\n"},type:{type:"reference",name:"PluginConstructor",id:166,typeArguments:[{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:712}}]}}],type:{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:712}}}],sources:[{fileName:"test-utils.ts",line:59,character:11}]},{id:1158,name:"nextValueOf",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1159,name:"nextValueOf",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return a promise that resolves on the next value change."},typeParameter:[{id:1160,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1161,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1162,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1163,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1164,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1165,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1166,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1161}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:51,character:33}]}}},{id:1167,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1161}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]}}],sources:[{fileName:"test-utils.ts",line:51,character:13}]},{id:1148,name:"spySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1149,name:"spySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return an array that fills with each new selected value."},typeParameter:[{id:1150,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1151,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1152,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1153,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1154,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1155,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1156,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1151}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:46,character:33}]}}},{id:1157,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1151}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"array",elementType:{type:"typeParameter",name:"T"}}]}}],sources:[{fileName:"test-utils.ts",line:46,character:13}]},{id:1172,name:"unmount",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1173,name:"unmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Unmount the test case"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"test-utils.ts",line:62,character:9}]}],groups:[{title:"Properties",kind:1024,children:[1128,1174]},{title:"Methods",kind:2048,children:[1129,1138,1133,1168,1158,1148,1172]}],sources:[{fileName:"test-utils.ts",line:24,character:28}],extendedBy:[{type:"reference",name:"ControllerTestFixture",id:1180},{type:"reference",name:"ServiceTestFixture",id:1242}]},{id:1122,name:"TestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:1125,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Optional base url provided to application services. Defaults to http://localhost"
},sources:[{fileName:"test-utils.ts",line:13,character:9}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]}},{id:1124,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Location string used to match route. Defaults to '/'"},sources:[{fileName:"test-utils.ts",line:10,character:10}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]}},{id:1123,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:7,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:166}}}],groups:[{title:"Properties",kind:1024,children:[1125,1124,1123]}],sources:[{fileName:"test-utils.ts",line:5,character:33}],extendedBy:[{type:"reference",name:"ControllerTestFixtureProps",id:1175},{type:"reference",name:"ServiceTestFixtureProps",id:1234}]},{id:1292,name:"controllerTestFixture",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1293,name:"controllerTestFixture",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1294,name:"Controller",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Component"}}],parameters:[{id:1295,name:"props",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ControllerTestFixtureProps",id:1175}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"ControllerTestFixture",id:1180,typeArguments:[{type:"typeParameter",name:"Controller",constraint:{type:"reference",name:"Component"}}]}]}}],sources:[{fileName:"test-utils.ts",line:90,character:37}]},{id:1296,name:"serviceTestFixture",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1297,name:"serviceTestFixture",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1298,name:"ServiceType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:693}}],parameters:[{id:1299,name:"props",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ServiceTestFixtureProps",id:1234,typeArguments:[{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:693}}]}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"ServiceTestFixture",id:1242,typeArguments:[{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:693}}]}]}}],sources:[{fileName:"test-utils.ts",line:126,character:34}]}],groups:[{title:"Interfaces",kind:256,children:[1180,1175,1242,1234,1126,1122]},{title:"Functions",kind:64,children:[1292,1296]}],sources:[{fileName:"test-utils.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-test-utils-fb55f1953a9cdbb946d2.js.map