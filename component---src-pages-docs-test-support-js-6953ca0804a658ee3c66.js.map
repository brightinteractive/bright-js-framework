{"version":3,"sources":["webpack:///component---src-pages-docs-test-support-js-6953ca0804a658ee3c66.js","webpack:///./src/pages/docs/examples/plugins/injection-using.tsx?70be","webpack:///./src/pages/docs/examples/test-support/after.tsx","webpack:///./src/pages/docs/examples/test-support/before.tsx","webpack:///./src/pages/docs/test-support.js"],"names":["webpackJsonp","./node_modules/raw-loader/index.js!./src/pages/docs/examples/plugins/injection-using.tsx","module","exports","./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/after.tsx","./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/before.tsx","./node_modules/babel-loader/lib/index.js?{\"plugins\":[\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"presets\":[[\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":\"commonjs\",\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-preset-stage-0/lib/index.js\",\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-preset-react/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/docs/test-support.js","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","_react","React","_gatsbyLink","_Section","_Headers","_CodeBlock","createElement","PageHeader","Section","alwaysExpanded","title","CodeFile","path"],"mappings":"AAAAA,cAAc,iBAERC,2FACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA,kwBDSMC,sFACA,SAAUF,EAAQC,GEVxBD,EAAAC,QAAA,mtBFgBME,uFACA,SAAUH,EAAQC,GGjBxBD,EAAAC,QAAA,4UHuBMG,8gCACA,SAAUJ,EAAQC,EAASI,GAEhC,YAkBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAAwBH,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAII,KAAa,IAAW,MAAPJ,EAAe,IAAK,GAAIK,KAAOL,GAAWM,OAAOC,UAAUC,eAAeC,KAAKT,EAAKK,KAAMD,EAAOC,GAAOL,EAAIK,GAAgC,OAAtBD,GAAOF,QAAUF,EAAYI,EAlBlQV,EAAQO,YAAa,CI5BtB,IAAAS,GAAAZ,EAAA,iCAAYa,EJgCCR,EAAwBO,GI/BrCE,EAAAd,EAAA,uCACAe,GJkCoBd,EAAuBa,GIlC3Cd,EAAA,gCACAgB,EAAAhB,EAAA,+BACAiB,EAAAjB,EAAA,gCJ4CCJ,GAAQQ,QI1CM,WACb,MACES,GAAAK,cAAA,WACEL,EAAAK,cAAAF,EAAAG,WAAA,qBACAN,EAAAK,cAAAH,EAAAK,SAASC,gBAAA,EAAeC,MAAM,uBAC5BT,EAAAK,cAAA,8KAGAL,EAAAK,cAAA,sFAGAL,EAAAK,cAAAD,EAAAM,UAAUC,KAAK,oCACZxB,EAAQ,6FAEXa,EAAAK,cAAA,kKAGAL,EAAAK,cAAAD,EAAAM,UAAUC,KAAK,yCACZxB,EAAQ,yFAEXa,EAAAK,cAAA,iMAGAL,EAAAK,cAAA,mLAGAL,EAAAK,cAAAD,EAAAM,UAAUC,KAAK,yCACZxB,EAAQ,2FJuElBL,EAAOC,QAAUA,EAAiB","file":"component---src-pages-docs-test-support-js-6953ca0804a658ee3c66.js","sourcesContent":["webpackJsonp([121848987090403],{\n\n/***/ \"./node_modules/raw-loader/index.js!./src/pages/docs/examples/plugins/injection-using.tsx\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import * as React from 'react'\\nimport { controller } from '@brightinteractive/bright-js-framework'\\nimport { eventManager, EventManager } from '../plugins/EventManager'\\nimport { Button } from './widgets'\\n\\n@controller()\\nexport class ControlPanel extends React.PureComponent {\\n  @eventManager\\n  eventManager: EventManager\\n\\n  handleOpenClick = () => {\\n    this.eventManager.emit('request-open-pod-bay-doors')\\n  }\\n\\n  componentDidMount() {\\n    this.eventManager.registerHandler('request-open-pod-bay-doors', () => {\\n      console.error('I’m sorry but I can’t do that, Dave')\\n    })\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <h3>Pod Bay doors:</h3>\\n        <Button onClick={this.handleOpenClick}>Open</Button>\\n      </div>\\n    )\\n  }\\n}\\n\"\n\n/***/ }),\n\n/***/ \"./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/after.tsx\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import { expect } from 'chai'\\nimport * as React from 'react'\\nimport { TestFixture } from '@brightinteractive/bright-js-framework/test-utils'\\nimport { ControlPanel } from './ControlPanel'\\nimport EventManagerPlugin from '../plugins/EventManager'\\n\\ndescribe('ControlPanel', () => {\\n  it('posts message when button is clicked', (done) => {\\n    const fixture = new TestFixture({\\n      plugins: [EventManagerPlugin],\\n      markup: (\\n        <ControlPanel />\\n      )\\n    })\\n\\n    fixture.stub(EventManagerPlugin, (plugin) => {\\n      plugin.eventManager.registerHandler('request-open-pod-bay-doors', () => {\\n        done()\\n      })\\n    })\\n\\n    fixture.render().closest('button').simulate('click')\\n  })\\n})\\n\"\n\n/***/ }),\n\n/***/ \"./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/before.tsx\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"import { expect } from 'chai'\\nimport * as React from 'react'\\nimport { mount } from 'enzyme'\\nimport { ControlPanel } from './ControlPanel'\\n\\ndescribe('ControlPanel', () => {\\n  it('posts message when button is clicked', () => {\\n    const dom = mount(<ControlPanel />)\\n    dom.closest('button').simulate('click')\\n  })\\n})\\n\"\n\n/***/ }),\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"presets\\\":[[\\\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-preset-env/lib/index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/home/travis/build/brightinteractive/bright-js-framework/docs-site/node_modules/babel-preset-react/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/docs/test-support.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar React = _interopRequireWildcard(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(\"./node_modules/gatsby-link/index.js\");\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _Section = __webpack_require__(\"./src/components/Section.js\");\n\t\n\tvar _Headers = __webpack_require__(\"./src/components/Headers.js\");\n\t\n\tvar _CodeBlock = __webpack_require__(\"./src/components/CodeBlock.js\");\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function () {\n\t  return React.createElement(\n\t    'div',\n\t    null,\n\t    React.createElement(\n\t      _Headers.PageHeader,\n\t      null,\n\t      'Test Support'\n\t    ),\n\t    React.createElement(\n\t      _Section.Section,\n\t      { alwaysExpanded: true, title: 'Testing Controllers' },\n\t      React.createElement(\n\t        'p',\n\t        null,\n\t        'Previously, we looked at using plugins to add application-level behavior. This presents us with a problem when we come to test components that depend on plugins.'\n\t      ),\n\t      React.createElement(\n\t        'p',\n\t        null,\n\t        'Let\\u2019s take a look at the ControlPanel component that we built previously:'\n\t      ),\n\t      React.createElement(\n\t        _CodeBlock.CodeFile,\n\t        { path: '/src/components/ControlPanel.tsx' },\n\t        __webpack_require__(\"./node_modules/raw-loader/index.js!./src/pages/docs/examples/plugins/injection-using.tsx\")\n\t      ),\n\t      React.createElement(\n\t        'p',\n\t        null,\n\t        'As a slightly contrived example of a test, let\\u2019s imagine that we want to verify that when the button is clicked, it dispatches the appropriate event.'\n\t      ),\n\t      React.createElement(\n\t        _CodeBlock.CodeFile,\n\t        { path: '/src/components/ControlPanel.test.tsx' },\n\t        __webpack_require__(\"./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/before.tsx\")\n\t      ),\n\t      React.createElement(\n\t        'p',\n\t        null,\n\t        'This test will throw an exception. The ControlPanel component is expecting to receive the EventManager instance from a plugin, but we haven\\'t provided this plugin to the test case.'\n\t      ),\n\t      React.createElement(\n\t        'p',\n\t        null,\n\t        'Bright-js-framework provides the TestFixture class to help with this. Let\\u2019s rewrite this test case using the TestFixture class to provide an EventManager to the test:'\n\t      ),\n\t      React.createElement(\n\t        _CodeBlock.CodeFile,\n\t        { path: '/src/components/ControlPanel.test.tsx' },\n\t        __webpack_require__(\"./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/after.tsx\")\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-docs-test-support-js-6953ca0804a658ee3c66.js","module.exports = \"import * as React from 'react'\\nimport { controller } from '@brightinteractive/bright-js-framework'\\nimport { eventManager, EventManager } from '../plugins/EventManager'\\nimport { Button } from './widgets'\\n\\n@controller()\\nexport class ControlPanel extends React.PureComponent {\\n  @eventManager\\n  eventManager: EventManager\\n\\n  handleOpenClick = () => {\\n    this.eventManager.emit('request-open-pod-bay-doors')\\n  }\\n\\n  componentDidMount() {\\n    this.eventManager.registerHandler('request-open-pod-bay-doors', () => {\\n      console.error('I’m sorry but I can’t do that, Dave')\\n    })\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <h3>Pod Bay doors:</h3>\\n        <Button onClick={this.handleOpenClick}>Open</Button>\\n      </div>\\n    )\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/pages/docs/examples/plugins/injection-using.tsx\n// module id = ./node_modules/raw-loader/index.js!./src/pages/docs/examples/plugins/injection-using.tsx\n// module chunks = 77055595419222 121848987090403","module.exports = \"import { expect } from 'chai'\\nimport * as React from 'react'\\nimport { TestFixture } from '@brightinteractive/bright-js-framework/test-utils'\\nimport { ControlPanel } from './ControlPanel'\\nimport EventManagerPlugin from '../plugins/EventManager'\\n\\ndescribe('ControlPanel', () => {\\n  it('posts message when button is clicked', (done) => {\\n    const fixture = new TestFixture({\\n      plugins: [EventManagerPlugin],\\n      markup: (\\n        <ControlPanel />\\n      )\\n    })\\n\\n    fixture.stub(EventManagerPlugin, (plugin) => {\\n      plugin.eventManager.registerHandler('request-open-pod-bay-doors', () => {\\n        done()\\n      })\\n    })\\n\\n    fixture.render().closest('button').simulate('click')\\n  })\\n})\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/pages/docs/examples/test-support/after.tsx\n// module id = ./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/after.tsx\n// module chunks = 121848987090403","module.exports = \"import { expect } from 'chai'\\nimport * as React from 'react'\\nimport { mount } from 'enzyme'\\nimport { ControlPanel } from './ControlPanel'\\n\\ndescribe('ControlPanel', () => {\\n  it('posts message when button is clicked', () => {\\n    const dom = mount(<ControlPanel />)\\n    dom.closest('button').simulate('click')\\n  })\\n})\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/pages/docs/examples/test-support/before.tsx\n// module id = ./node_modules/raw-loader/index.js!./src/pages/docs/examples/test-support/before.tsx\n// module chunks = 121848987090403","import * as React from 'react'\nimport Link from 'gatsby-link'\nimport {Section} from '../../components/Section'\nimport {PageHeader} from '../../components/Headers'\nimport {CodeFile} from '../../components/CodeBlock'\n\nexport default () => {\n  return (\n    <div>\n      <PageHeader>Test Support</PageHeader>\n      <Section alwaysExpanded title=\"Testing Controllers\">\n        <p>\n          Previously, we looked at using plugins to add application-level behavior. This presents us with a problem when we come to test components that depend on plugins.\n        </p>\n        <p>\n          Let’s take a look at the ControlPanel component that we built previously:\n        </p>\n        <CodeFile path=\"/src/components/ControlPanel.tsx\">\n          {require('raw!./examples/plugins/injection-using.tsx')}\n        </CodeFile>\n        <p>\n          As a slightly contrived example of a test, let’s imagine that we want to verify that when the button is clicked, it dispatches the appropriate event.\n        </p>\n        <CodeFile path=\"/src/components/ControlPanel.test.tsx\">\n          {require('raw!./examples/test-support/before.tsx')}\n        </CodeFile>\n        <p>\n          This test will throw an exception. The ControlPanel component is expecting to receive the EventManager instance from a plugin, but we haven't provided this plugin to the test case.\n        </p>\n        <p>\n          Bright-js-framework provides the TestFixture class to help with this. Let’s rewrite this test case using the TestFixture class to provide an EventManager to the test:\n        </p>\n        <CodeFile path=\"/src/components/ControlPanel.test.tsx\">\n          {require('raw!./examples/test-support/after.tsx')}\n        </CodeFile>\n      </Section>\n    </div>\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/docs/test-support.js"],"sourceRoot":""}