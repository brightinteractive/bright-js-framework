webpackJsonp([37692960299797],{"./node_modules/json-loader/index.js!./.cache/json/modules-index.json":function(e,t){e.exports={pathContext:{docs:{id:336,name:'"index"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/index.ts",children:[{id:383,name:"Action",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Object describing a mutation to the application datastore."},indexSignature:[{id:385,name:"__index",kind:8192,kindString:"Index signature",flags:{},comment:{shortText:"Object describing a mutation to the application datastore."},parameters:[{id:386,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}}],type:{type:"union",types:[{type:"intrinsic",name:"any"},{type:"intrinsic",name:"undefined"}]}}],children:[{id:384,name:"type",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:196,character:6}],type:{type:"intrinsic",name:"string"}}],groups:[{title:"Properties",kind:1024,children:[384]}],sources:[{fileName:"index.ts",line:195,character:23}]},{id:394,name:"Dispatcher",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Dispatcher function injected by the @dispatcher() decorator"},signatures:[{id:395,name:"__call",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Dispatcher function injected by the @dispatcher() decorator"},parameters:[{id:396,name:"action",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"Action",id:383}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:218,character:27}]},{id:343,name:"Location",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Components of parsed page location"},children:[{id:346,name:"hash",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Hash string extracted from page URL"},sources:[{fileName:"index.ts",line:71,character:6}],type:{type:"intrinsic",name:"string"}},{id:344,name:"pathname",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Path extracted from page URL"},sources:[{fileName:"index.ts",line:65,character:10}],type:{type:"intrinsic",name:"string"}},{id:345,name:"search",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Query string extracted from page URL"},sources:[{fileName:"index.ts",line:68,character:8}],type:{type:"intrinsic",name:"string"}}],groups:[{title:"Properties",kind:1024,children:[346,344,345]}],sources:[{fileName:"index.ts",line:63,character:25}]},{id:365,name:"PluginConfig",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Configuration class for providing additonal features (such as data-fetching, authentication\nproviders, etc) to an application.",text:"Plugins declare dependencies by using the @exported decorator.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:366,name:"State",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:381,name:"Service",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:149,character:20}],type:{type:"reflection",declaration:{id:382,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"index.ts",line:149,character:21}]}},defaultValue:" _Service"},{id:380,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:146,character:9}],type:{type:"reference",name:"ServiceContext",id:363},inheritedFrom:{type:"reference",name:"Service.context",id:362}},{id:370,name:"serviceDidMount",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Called after a service’s parent controller mounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentDidMount()\n"},sources:[{fileName:"index.ts",line:134,character:17}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:371,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:372,name:"__call",kind:4096,kindString:"Call signature",flags:{},type:{type:"intrinsic",name:"void"}}]}}]},inheritedFrom:{type:"reference",name:"Service.serviceDidMount",id:352}},{id:367,name:"serviceWillMount",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Called before a service’s parent controller mounts or before it is statically rendered.",text:"Corresponds to React’s componentWillMount()\n"},sources:[{fileName:"index.ts",line:127,character:18}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:368,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:369,name:"__call",kind:4096,kindString:"Call signature",flags:{},type:{type:"intrinsic",name:"void"}}]}}]},inheritedFrom:{type:"reference",name:"Service.serviceWillMount",id:349}},{id:373,name:"serviceWillUnmount",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Called before a service’s parent controller unmounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentWillUnmount()\n"},sources:[{fileName:"index.ts",line:141,character:20}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:374,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:375,name:"__call",kind:4096,kindString:"Call signature",flags:{},type:{type:"intrinsic",name:"void"}}]}}]},inheritedFrom:{type:"reference",name:"Service.serviceWillUnmount",id:355}},{id:376,name:"state",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:143,character:16}],type:{type:"typeParameter",name:"State"},inheritedFrom:{type:"reference",name:"Service.state",id:358}},{id:377,name:"setState",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:378,name:"setState",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:379,name:"state",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"Partial",typeArguments:[{type:"typeParameter",name:"State"}]}}],type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"Service.setState",id:359}}],sources:[{fileName:"index.ts",line:144,character:10}],inheritedFrom:{type:"reference",name:"Service.setState",id:359}}],groups:[{title:"Properties",kind:1024,children:[381,380,370,367,373,376]},{title:"Methods",kind:2048,children:[377]}],sources:[{fileName:"index.ts",line:164,character:29},{fileName:"index.ts",line:165,character:25}],defaultValue:" _PluginConfig",extendedTypes:[{type:"reference",name:"Service",id:347}]},{id:337,name:"RouteProps",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Props passed into a component annotated with @route"},typeParameter:[{id:338,name:"Params",kind:131072,kindString:"Type parameter",flags:{},comment:{shortText:"Types of route parameters"},type:{type:"reference",name:"Record",typeArguments:[{type:"intrinsic",name:"string"},{type:"intrinsic",name:"string"}]}},{id:339,name:"Query",kind:131072,kindString:"Type parameter",flags:{},comment:{shortText:"Expected types of query params object\n"},type:{type:"reference",name:"Record",typeArguments:[{type:"intrinsic",name:"string"},{type:"union",types:[{type:"intrinsic",name:"string"},{type:"intrinsic",name:"undefined"}]}]}}],children:[{id:340,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Location of the current matched route"},sources:[{fileName:"index.ts",line:51,character:10}],type:{type:"reference",name:"Location",id:343}},{id:341,name:"pathParams",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Values extracted from path components"},sources:[{fileName:"index.ts",line:54,character:12}],type:{type:"typeParameter",name:"Params",constraint:{type:"reference",name:"Record",typeArguments:[{type:"intrinsic",name:"string"},{type:"intrinsic",name:"string"}]}}},{id:342,name:"queryParams",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Values extracted from url query params"},sources:[{fileName:"index.ts",line:57,character:13}],type:{type:"typeParameter",name:"Query",constraint:{type:"reference",name:"Record",typeArguments:[{type:"intrinsic",name:"string"},{type:"union",types:[{type:"intrinsic",name:"string"},{type:"intrinsic",name:"undefined"}]}]}}}],groups:[{title:"Properties",kind:1024,children:[340,341,342]}],sources:[{fileName:"index.ts",line:49,character:27}]},{id:387,name:"SelectFn",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Function describing how to select data from the application datastore.",text:"Passed to the @select() decorator\n"},typeParameter:[{id:388,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],signatures:[{id:389,name:"__call",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Function describing how to select data from the application datastore.",text:"Passed to the @select() decorator\n"},parameters:[{id:390,name:"state",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"index.ts",line:205,character:25}]},{id:347,name:"Service",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Base class for creating Services.",text:"Services are classes that have access to a subset of the React Component API.\nThey are owned by a parent component, and receive lifecycle events.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:348,name:"State",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:362,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:146,character:9}],type:{type:"reference",name:"ServiceContext",id:363}},{id:352,name:"serviceDidMount",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Called after a service’s parent controller mounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentDidMount()\n"},sources:[{fileName:"index.ts",line:134,character:17}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:353,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:354,name:"__call",kind:4096,kindString:"Call signature",flags:{},type:{type:"intrinsic",name:"void"}}]}}]}},{id:349,name:"serviceWillMount",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Called before a service’s parent controller mounts or before it is statically rendered.",text:"Corresponds to React’s componentWillMount()\n"},sources:[{fileName:"index.ts",line:127,character:18}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:350,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:351,name:"__call",kind:4096,kindString:"Call signature",flags:{},type:{type:"intrinsic",name:"void"}}]}}]}},{id:355,name:"serviceWillUnmount",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Called before a service’s parent controller unmounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentWillUnmount()\n"},sources:[{fileName:"index.ts",line:141,character:20}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:356,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:357,name:"__call",kind:4096,kindString:"Call signature",flags:{},type:{type:"intrinsic",name:"void"}}]}}]}},{id:358,name:"state",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:143,character:16}],type:{type:"typeParameter",name:"State"}},{id:359,name:"setState",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:360,name:"setState",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:361,name:"state",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"Partial",typeArguments:[{type:"typeParameter",name:"State"}]}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:144,character:10}]}],groups:[{title:"Properties",kind:1024,children:[362,352,349,355,358]},{title:"Methods",kind:2048,children:[359]}],sources:[{fileName:"index.ts",line:121,character:24},{fileName:"index.ts",line:149,character:20}],defaultValue:" _Service",extendedBy:[{type:"reference",name:"PluginConfig",id:365}]},{id:363,name:"ServiceContext",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Opaque object passed into service constructors"},children:[{id:364,name:"@appContext",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:153,character:15}],type:{type:"intrinsic",name:"any"}}],groups:[{title:"Properties",kind:1024,children:[364]}],sources:[{fileName:"index.ts",line:152,character:31}]},{id:391,name:"StateSelection",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Service created by the @select decorator containing current value of\nan application state subscription."},typeParameter:[{id:392,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:393,name:"value",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:214,character:7}],type:{type:"typeParameter",name:"T"}}],groups:[{title:"Properties",kind:1024,children:[393]}],sources:[{fileName:"index.ts",line:213,character:31}]},{id:424,name:"ComponentDecorator",kind:4194304,kindString:"Type alias",flags:{isExported:!0},sources:[{fileName:"index.ts",line:275,character:30}],type:{type:"reflection",declaration:{id:425,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:426,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:427,name:"cls",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ComponentClass",typeArguments:[{type:"typeParameter",name:"Props"}]}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:275,character:44}]}}},{id:407,name:"PluginConstructor",kind:4194304,kindString:"Type alias",flags:{isExported:!0},sources:[{fileName:"index.ts",line:167,character:29}],type:{type:"reflection",declaration:{id:408,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"index.ts",line:167,character:70}]}}},{id:428,name:"PropertyDecorator",kind:4194304,kindString:"Type alias",flags:{isExported:!0},sources:[{fileName:"index.ts",line:276,character:29}],type:{type:"reflection",declaration:{id:429,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:430,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:431,name:"proto",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:432,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}}],type:{type:"intrinsic",name:"any"}}],sources:[{fileName:"index.ts",line:276,character:31}]}}},{id:400,name:"Link",kind:32,kindString:"Variable",flags:{isExported:!0},comment:{shortText:"Drop-in replacement for HTML anchor element that makes frontend page transitions\ninstead of forcing a new page load. The accepted properties and behavior of the Link\nelement are otherwise identical to the anchor element."},sources:[{fileName:"index.ts",line:79,character:17}],type:{type:"reference",name:"ComponentClass",typeArguments:[{type:"reference",name:"HTMLProps",typeArguments:[{type:"reference",name:"__type"}]}]},defaultValue:" _Link"},{id:401,name:"controller",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:402,name:"controller",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare that a component is a controller.",text:"You must annotate a React Component as a controller before attaching services to it.\nYou do not need to annotate a service before attaching other services to it.\n"},type:{type:"reference",name:"ComponentDecorator",id:424}}],sources:[{fileName:"index.ts",line:87,character:26}]},{id:422,name:"dispatcher",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:423,name:"dispatcher",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Injects the application’s action dispatcher into a controller or service"},type:{type:"reference",name:"PropertyDecorator",id:428}}],sources:[{fileName:"index.ts",line:271,character:26}]},{id:409,name:"exported",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:410,name:"exported",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare that a property of a PluginConfig is available for injection into components\nand services."},parameters:[{id:411,name:"id",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Identifier used to inject the dependency when provided to @inject decorator.\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"PropertyDecorator",id:428}}],sources:[{fileName:"index.ts",line:175,character:24}]},{id:412,name:"inject",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:413,name:"inject",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare that a property of a Controller, Service or PluginContext should be fulfilled\nusing dependency injection.",text:"Objects injected by plugins are shared between the whole application.\nThis differes from services, which are unique to each controller.\n"},parameters:[{id:414,name:"id",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Identifier of the dependency to inject.\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"PropertyDecorator",id:428}}],sources:[{fileName:"index.ts",line:188,character:22}]},{id:397,name:"route",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:398,name:"route",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare a component as a route and associate a path with it.\nAll components in your project's pages directory (by default, `src/pages`)\nthat are decorated with @route will be served to users.",text:"```\n  interface MyRouteParams {\n    name: string\n  }\n\n  @route('/sayHello/:name')\n  class MyRoute extends React.PureComponent<RouteProps<MyRouteParams>> {\n    render() {\n      return <div>Hello, {this.props.pathParams.name}</div>\n    }\n  }\n```\n"},parameters:[{id:399,name:"path",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Path pattern to serve the route from\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"ComponentDecorator",id:424,typeArguments:[{type:"reference",name:"RouteProps",id:337}]}}],sources:[{fileName:"index.ts",line:37,character:21}]},{id:418,name:"select",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:419,name:"select",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Injects a StateSelector into the component",text:"```\n class Counter extends React.PureComponent {\n   @select(Counter.getValue)\n   counter: StateSelector<number>\n\n   render() {\n     return <div>{this.counter.value}</div>\n   }\n }\n```\n"},typeParameter:[{id:420,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:421,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"SelectFn",id:387,typeArguments:[{type:"typeParameter",name:"T"}]}}],type:{type:"reference",name:"PropertyDecorator",id:428}}],sources:[{fileName:"index.ts",line:264,character:22}]},{id:403,name:"service",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:404,name:"service",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Attach a service to a property of a controller or other service.",text:"You must annotate a React Component as a controller before attaching services to it.\nYou do not need to annotate a service before attaching other services to it.\n\nServices are unique to the controller that they are attached to.\nThis differs from dependencies injected using plugins, which are shared amongst the whole\napplication.\n\n```\n @controller()\n class Foo extends React.Component {\n   @service(MyService)\n   myService: MyService\n }\n```\n"},parameters:[{id:405,name:"constructor",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:406,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"index.ts",line:109,character:36}]}}}],type:{type:"reference",name:"PropertyDecorator",id:428}}],sources:[{fileName:"index.ts",line:109,character:23}]},{id:415,name:"state",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:416,name:"state",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare how to manage state changes for an aspect of application state.",text:"State changes are managed using reducer functions, which take the previous state\nof part of the application store and an action describing a mutation, then return\nthe next state of the store.\n\nState reducers are defined by decorating a static method of a plugin with a `@state()` decorator.\n\n```\n class CounterPlugin extends PluginConfig {\n   @state()\n   static update(state: number = 0, action: Action) {\n     if (action.type === 'counter:increment') {\n       return state + 1\n     }\n\n     return state\n   }\n }\n```\n"},parameters:[{id:417,name:"key",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Key of the application’s store to manage using the decorated function\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"PropertyDecorator",id:428}}],sources:[{fileName:"index.ts",line:246,character:21}]}],groups:[{title:"Interfaces",kind:256,children:[383,394,343,365,337,387,347,363,391]},{title:"Type aliases",kind:4194304,children:[424,407,428]},{title:"Variables",kind:32,children:[400]},{title:"Functions",kind:64,children:[401,422,409,412,397,418,403,415]}],sources:[{fileName:"index.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-index-6dea3d0695177dbf5b7e.js.map