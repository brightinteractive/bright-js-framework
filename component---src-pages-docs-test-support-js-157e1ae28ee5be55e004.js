webpackJsonp([0x6ed22d977de3],{312:function(e,n,t){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}function r(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}n.__esModule=!0;var a=t(1),l=r(a),i=t(47),s=(o(i),t(34)),c=t(24),p=t(38);n.default=function(){return l.createElement("div",null,l.createElement(c.PageHeader,null,"Test Support"),l.createElement(s.Section,{alwaysExpanded:!0,title:"Testing Controllers"},l.createElement("p",null,"Previously, we looked at using plugins to add application-level behavior. This presents us with a problem when we come to test components that depend on plugins."),l.createElement("p",null,"Let’s take a look at the ControlPanel component that we built previously:"),l.createElement(p.CodeFile,{path:"src/components/ControlPanel.tsx"},t(678)),l.createElement("p",null,"As a slightly contrived example of a test, let’s imagine that we want to verify that when the button is clicked, it dispatches the appropriate event."),l.createElement(p.CodeFile,{path:"src/components/ControlPanel.test.before.tsx"},t(676)),l.createElement("p",null,"This test will throw an exception. The ControlPanel component is expecting to receive the EventManager instance from a plugin, but we haven't provided this plugin to the test case."),l.createElement("p",null,"Bright-js-framework provides the TestFixture class to help with this. Let’s rewrite this test case using the TestFixture class to provide an EventManager to the test:"),l.createElement(p.CodeFile,{path:"src/components/ControlPanel.test.tsx"},t(677))))},e.exports=n.default},676:function(e,n){e.exports="import * as React from 'react'\nimport { mount } from 'enzyme'\nimport { ControlPanel } from './ControlPanel'\n\ndescribe('ControlPanel', () => {\n  it('posts message when button is clicked', () => {\n    const dom = mount(<ControlPanel />)\n    dom.closest('button').simulate('click')\n  })\n})\n"},677:function(e,n){e.exports="import * as React from 'react'\nimport { controllerTestFixture } from '@brightinteractive/bright-js-framework/test-utils'\nimport { ControlPanel } from './ControlPanel'\nimport EventManagerPlugin from '../plugins/EventManagerPlugin'\n\ndescribe('ControlPanel', () => {\n  it('posts message when button is clicked', async (done) => {\n    const fixture = await controllerTestFixture({\n      plugins: [EventManagerPlugin],\n      markup: (\n        <ControlPanel />\n      )\n    })\n\n    return new Promise((resolve) => {\n      fixture.getPlugin(EventManagerPlugin).eventManager.registerHandler('request-open-pod-bay-doors', () => {\n        done()\n      })\n    })\n  })\n})\n"},678:function(e,n){e.exports="import * as React from 'react'\nimport { controller } from '@brightinteractive/bright-js-framework'\nimport { eventManager, EventManager } from '../plugins/EventManagerPlugin'\n\n@controller()\nexport class ControlPanel extends React.PureComponent {\n  @eventManager\n  eventManager: EventManager\n\n  handleOpenClick = () => {\n    this.eventManager.emit('request-open-pod-bay-doors')\n  }\n\n  componentDidMount() {\n    this.eventManager.registerHandler('request-open-pod-bay-doors', () => {\n      console.error('I’m sorry but I can’t do that, Dave')\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Pod Bay doors:</h3>\n        <button onClick={this.handleOpenClick}>Open</button>\n      </div>\n    )\n  }\n}\n"}});
//# sourceMappingURL=component---src-pages-docs-test-support-js-157e1ae28ee5be55e004.js.map