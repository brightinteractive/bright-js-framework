webpackJsonp([0xd0131d25195e],{508:function(e,r){e.exports={pathContext:{docs:{id:865,name:'"plugins/browserstorage/index"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/plugins/browserstorage/index.ts",children:[{id:877,name:"BrowserStoragePluginProps",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:878,name:"underlyingStorage",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The storage mechanism to be used by the plugin"},sources:[{fileName:"plugins/browserstorage/index.ts",line:28,character:19}],type:{type:"reference",name:"BrowserStorageSystem",id:866}}],groups:[{title:"Properties",kind:1024,children:[878]}],sources:[{fileName:"plugins/browserstorage/index.ts",line:24,character:42}]},{id:866,name:"BrowserStorageSystem",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:874,name:"clear",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:875,name:"clear",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Removes the value (if present) associated with this key"},parameters:[{id:876,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"plugins/browserstorage/index.ts",line:21,character:7}]},{id:867,name:"get",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:868,name:"get",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Gets the current value of the key from the underlying storage mechanism"},parameters:[{id:869,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}}],type:{type:"union",types:[{type:"intrinsic",name:"string"},{type:"intrinsic",name:"null"}]}}],sources:[{fileName:"plugins/browserstorage/index.ts",line:11,character:5}]},{id:870,name:"set",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:871,name:"set",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Updates the value in the underlying storage mechanism"},parameters:[{id:872,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}},{id:873,name:"value",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"plugins/browserstorage/index.ts",line:16,character:5}]}],groups:[{title:"Methods",kind:2048,children:[874,867,870]}],sources:[{fileName:"plugins/browserstorage/index.ts",line:7,character:37}]},{id:881,name:"browserStorage",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:882,name:"browserStorage",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Grabs the currently-in-use browser storage mechanism"},type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"plugins/browserstorage/index.ts",line:43,character:30}]},{id:879,name:"browserStoragePlugin",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:880,name:"browserStoragePlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Constructs a plugin that allows access to browser-scoped storage",text:"(Defaults to using localStorage if no props are provided)\n"},type:{type:"reference",name:"PluginConstructor",id:99}}],sources:[{fileName:"plugins/browserstorage/index.ts",line:36,character:44}]}],groups:[{title:"Interfaces",kind:256,children:[877,866]},{title:"Functions",kind:64,children:[881,879]}],sources:[{fileName:"plugins/browserstorage/index.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-plugins-browserstorage-index-f54e4975310570e6649a.js.map