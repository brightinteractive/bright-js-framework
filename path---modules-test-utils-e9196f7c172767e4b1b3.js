webpackJsonp([25881880502388],{"./node_modules/json-loader/index.js!./.cache/json/modules-test-utils.json":function(e,t){e.exports={pathContext:{docs:{id:590,name:'"test-utils"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/test-utils.ts",children:[{id:594,name:"TestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to a react component and mounting\ntest components using enzyme.",text:"You can optionally provide an array of plugins, which should generally be stub implementations\nof interfaces used in your applications. These can be stubbed using the `stub()` method.\n",tags:[{tag:"class",text:"\n"}]},children:[{id:595,name:"render",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:596,name:"render",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Render the test case into an Enzyme wrapper suitable for performing assertions against"},type:{type:"intrinsic",name:"any"}}],sources:[{fileName:"test-utils.ts",line:23,character:8}]},{id:597,name:"stub",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:598,name:"stub",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Stub all plugins of a particular type"},typeParameter:[{id:599,name:"T",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:427}}],parameters:[{id:600,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to stub"},type:{type:"reference",name:"PluginConstructor",id:34,typeArguments:[{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:427}}]}},{id:601,name:"stubFn",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Customizer function. It receives an instance of the plugin, which can be\n                   used to customize its behavior.\n"},type:{type:"reflection",declaration:{id:602,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:603,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:604,name:"fn",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:427}}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"test-utils.ts",line:32,character:73}]}}}],type:{type:"reference",name:"TestFixture",id:594}}],sources:[{fileName:"test-utils.ts",line:32,character:6}]}],groups:[{title:"Methods",kind:2048,children:[595,597]}],sources:[{fileName:"test-utils.ts",line:21,character:28},{fileName:"test-utils.ts",line:35,character:24}],defaultValue:" _TestFixture"},{id:591,name:"TestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:593,name:"markup",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Markup describing the component to render"},sources:[{fileName:"test-utils.ts",line:9,character:8}],type:{type:"reference",name:"ReactElement",typeArguments:[{type:"reference",name:"__type"}]}},{id:592,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:6,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:34}}}],groups:[{title:"Properties",kind:1024,children:[593,592]}],sources:[{fileName:"test-utils.ts",line:4,character:33}]}],groups:[{title:"Interfaces",kind:256,children:[594,591]}],sources:[{fileName:"test-utils.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-test-utils-e9196f7c172767e4b1b3.js.map