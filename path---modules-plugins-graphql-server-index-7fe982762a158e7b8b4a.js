webpackJsonp([0xe6ef9f715449],{511:function(e,t){e.exports={pathContext:{docs:{id:1976,name:'"plugins/graphql-server/index"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/plugins/graphql-server/index.ts",children:[{id:1980,name:"Connector",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Base class for objects defining how to mutate and retrieve data from remote resources.",text:"Typically, these will be API clients for remote web services used to resolve\nGraphQL requests.\n\nConnector instances have access to the request context, so they are able to retrive\nauthentication credentials and inject useful helper objects such as HttpClient.\n\nA common use case for a connector is to get a resource by id.\nWhere a resource is identified by a string id, subclassing a Connector using\n`withIdentify` and defining how to fetch a batch of resources by id will expose additional\nmethods on your Connector subclass such as `fetchOne`, which will batch and de-duplicate\nget requests to remote services made over a single incoming request.\n",tags:[{tag:"class",text:"\n"}]},children:[{id:1981,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"plugins/graphql-server/index.ts",line:86,character:18}],type:{type:"reference",name:"ServiceContext",id:710}}],groups:[{title:"Properties",kind:1024,children:[1981]}],sources:[{fileName:"plugins/graphql-server/index.ts",line:85,character:26},{fileName:"plugins/graphql-server/index.ts",line:89,character:22}],defaultValue:" _Connector",extendedBy:[{type:"reference",name:"ResourceWithIdConnector",id:1982}]},{id:2009,name:"ResourceBatchFetcher",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Batch retriever class describing how to fetch a batch of resources by ID.",text:"Subclasses of ResourceBatchFetcher are a special case of connectors.\nAlthough written like other connectors, they consist of a single method and are not\ncalled directly from your ResolverMap.\n\nInstead, when you subclass ResourceWithIdConnector, your ResourceBatchFetcher subclass is\npassed as a parameter, defining how the ResourceWithIdConnector should get a batch of resources\nby ID.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:2010,name:"IdType",kind:131072,kindString:"Type parameter",flags:{}},{id:2011,name:"Value",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:2012,name:"getMany",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:2013,name:"getMany",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Given a list of resource IDs, fetch an instance of each resource and return an object\nmapping IDs to values."},parameters:[{id:2014,name:"ids",kind:32768,kindString:"Parameter",flags:{},type:{type:"array",elementType:{type:"typeParameter",name:"IdType"}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"KeyValuePairs",id:2024,typeArguments:[{type:"typeParameter",name:"IdType"},{type:"typeParameter",name:"Value"}]}]}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:138,character:9}]}],groups:[{title:"Methods",kind:2048,children:[2012]}],sources:[{fileName:"plugins/graphql-server/index.ts",line:133,character:37},{fileName:"plugins/graphql-server/index.ts",line:140,character:33}],defaultValue:" _ResourceBatchFetcher"},{id:1982,name:"ResourceWithIdConnector",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Base class for objects defining how to mutate and retrieve data from remote resources where\nthe resource can be uniquely identified and retrieved using a single ID.",tags:[{tag:"class",text:"Connector.forResource\n"}]},typeParameter:[{id:1983,name:"IdType",kind:131072,kindString:"Type parameter",flags:{}},{id:1984,name:"Value",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1997,name:"Connector",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"plugins/graphql-server/index.ts",line:89,character:22}],type:{type:"reflection",declaration:{id:1998,name:"__type",kind:65536,kindString:"Type literal",flags:{},children:[{id:2006,name:"constructor",kind:512,kindString:"Constructor",flags:{},signatures:[{id:2007,name:"new __type",kind:16384,kindString:"Constructor signature",flags:{},parameters:[{id:2008,name:"context",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ServiceContext",id:710}}],type:{type:"reference",name:"Connector",id:1980}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:90,character:177}]},{id:1999,name:"forResource",kind:64,kindString:"Function",flags:{},signatures:[{id:2e3,name:"forResource",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:2001,name:"IdType",kind:131072,kindString:"Type parameter",flags:{}},{id:2002,name:"Value",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:2003,name:"Config",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:2004,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"plugins/graphql-server/index.ts",line:90,character:36}]}}}],type:{type:"reflection",declaration:{id:2005,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"plugins/graphql-server/index.ts",line:90,character:106}]}}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:90,character:13}]}],groups:[{title:"Constructors",kind:512,children:[2006]},{title:"Functions",kind:64,children:[1999]}],sources:[{fileName:"plugins/graphql-server/index.ts",line:89,character:23}]}},defaultValue:" _Connector"},{id:1996,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"plugins/graphql-server/index.ts",line:86,character:18}],type:{type:"reference",name:"ServiceContext",id:710},inheritedFrom:{type:"reference",name:"Connector.context",id:1981}},{id:1988,name:"getMany",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1989,name:"getMany",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Fetch multiple single instances of the connected resource by id."},parameters:[{id:1990,name:"ids",kind:32768,kindString:"Parameter",flags:{},type:{type:"array",elementType:{type:"typeParameter",name:"IdType"}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"Array",typeArguments:[{type:"union",types:[{type:"typeParameter",name:"Value"},{type:"intrinsic",name:"undefined"}]}]}]}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:110,character:9}]},{id:1985,name:"getOne",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1986,name:"getOne",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Fetch a single instances of the connected resource by id."},parameters:[{id:1987,name:"id",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"IdType"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"union",types:[{type:"typeParameter",name:"Value"},{type:"intrinsic",name:"undefined"}]}]}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:105,character:8}]},{id:1991,name:"getProperty",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1992,name:"getProperty",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Fetch an instance of the connected resource by id and return a property of it."},typeParameter:[{id:1993,name:"Key",kind:131072,kindString:"Type parameter",flags:{},type:{type:"unknown",name:"keyof Value"}}],parameters:[{id:1994,name:"id",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"IdType"}},{id:1995,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"Key",constraint:{type:"unknown",name:"keyof Value"}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"union",types:[{type:"unknown",name:"Value[Key]"},{type:"intrinsic",name:"undefined"}]}]}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:115,character:13}]}],groups:[{title:"Properties",kind:1024,children:[1997,1996]},{title:"Methods",kind:2048,children:[1988,1985,1991]}],sources:[{fileName:"plugins/graphql-server/index.ts",line:101,character:40}],extendedTypes:[{type:"reference",name:"Connector",id:1980}]},{id:1977,name:"SchemaType",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Base class for implementing resolver maps.",text:"ResolverMaps are collections of resolver functions, each one being responsible for defining\nhow to resolve properties declared in an APIâ€™s schema.\n\nWhen a resolver function is written for a scalar property (such as a string or number), it should\nreturn either the scalar value or (more typically) a Promise for the scalar value.\n\nWhen a resolver function is written for a relation to another object, it should not fetch the\nobject, but instead return a string ID for that object. This is then provided to\nthat Object's ResolverMap as its id property, which can then be used by the functions within the ResolverMap to fetch data\nabout it from backend services.\n\n",tags:[{tag:"class",text:"\n"}]},children:[{id:1979,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"plugins/graphql-server/index.ts",line:32,character:18}],type:{type:"reference",name:"ServiceContext",id:710}},{id:1978,name:"id",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"ID of the object that is being resolved"},sources:[{fileName:"plugins/graphql-server/index.ts",line:31,character:13}],type:{type:"intrinsic",name:"string"}}],groups:[{title:"Properties",kind:1024,children:[1979,1978]}],sources:[{fileName:"plugins/graphql-server/index.ts",line:29,character:27},{fileName:"plugins/graphql-server/index.ts",line:34,character:23}],defaultValue:" _SchemaType"},{id:2024,name:"KeyValuePairs",kind:4194304,kindString:"Type alias",flags:{isExported:!0},sources:[{fileName:"plugins/graphql-server/index.ts",line:118,character:25}],type:{type:"reference",name:"Array",typeArguments:[{type:"tuple",elements:[{type:"typeParameter",name:"Id"},{type:"typeParameter",name:"Value"}]}]}},{id:2020,name:"mutations",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:2021,name:"mutations",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare the that a ResolverMap contains functions used to perform mutations."},type:{type:"reference",name:"ClassDecorator"}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:57,character:25}]},{id:2018,name:"queries",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:2019,name:"queries",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare the that a ResolverMap contains functions used to resolve top-level queries (without the ID of\na parent object)."},type:{type:"reference",name:"ClassDecorator"}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:50,character:23}]},{id:2022,name:"resolver",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:2023,name:"resolver",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare the a method of a ResolverMap is used to resolve a type field of the same name."},type:{type:"reference",name:"MethodDecorator"}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:64,character:24}]},{id:2015,name:"type",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:2016,name:"type",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare the that a resolver is used to resolve schema objects of a specific type\nwith a known ID."},parameters:[{id:2017,name:"typeName",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Name of the type to resolve.\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"ClassDecorator"}}],sources:[{fileName:"plugins/graphql-server/index.ts",line:42,character:20}]}],groups:[{title:"Interfaces",kind:256,children:[1980,2009,1982,1977]},{title:"Type aliases",kind:4194304,children:[2024]},{title:"Functions",kind:64,children:[2020,2018,2022,2015]}],sources:[{fileName:"plugins/graphql-server/index.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-plugins-graphql-server-index-7fe982762a158e7b8b4a.js.map