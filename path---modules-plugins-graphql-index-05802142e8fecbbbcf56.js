webpackJsonp([0xb6b753138f7c],{509:function(e,n){e.exports={pathContext:{docs:{id:1229,name:'"plugins/graphql/index"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/plugins/graphql/index.ts",children:[{id:1246,name:"GraphQLClient",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"GraphQL client injectable into services.",text:"In general, you should use either @query or @mutation to interact with GraphQL APIs.\nHowever in some plugins and services, it may be necessary to perform queries and mutations\nwith an imperative API.\n"},children:[{id:1256,name:"performMutation",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1257,name:"performMutation",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1258,name:"Variables",kind:131072,kindString:"Type parameter",flags:{}},{id:1259,name:"Result",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1260,name:"queryDoc",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1261,name:"variables",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"Variables"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"GraphQLResult",id:1274,typeArguments:[{type:"typeParameter",name:"Result"}]}]}}],sources:[{fileName:"plugins/graphql/index.ts",line:74,character:17}]},{id:1247,name:"query",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1248,name:"query",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1249,name:"Result",kind:131072,kindString:"Type parameter",flags:{}},{id:1250,name:"Variables",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1251,name:"queryDoc",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1252,name:"variables",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"Variables"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"Result"}]}},{id:1253,name:"query",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1254,name:"Result",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1255,name:"queryDoc",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"Result"}]}}],sources:[{fileName:"plugins/graphql/index.ts",line:71,character:7},{fileName:"plugins/graphql/index.ts",line:72,character:7}]}],groups:[{title:"Methods",kind:2048,children:[1256,1247]}],sources:[{fileName:"plugins/graphql/index.ts",line:70,character:30}]},{id:1240,name:"GraphQLMutation",kind:256,kindString:"Interface",flags:{isExported:!0},typeParameter:[{id:1241,name:"Variables",kind:131072,kindString:"Type parameter",flags:{}},{id:1242,name:"Result",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1243,name:"perform",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1244,name:"perform",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Perform the mutation."},parameters:[{id:1245,name:"variables",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"Variables"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"GraphQLResult",id:1274,typeArguments:[{type:"typeParameter",name:"Result"}]}]}}],sources:[{fileName:"plugins/graphql/index.ts",line:53,character:9}]}],groups:[{title:"Methods",kind:2048,children:[1243]}],sources:[{fileName:"plugins/graphql/index.ts",line:49,character:32}]},{id:1232,name:"GraphQLQuery",kind:256,kindString:"Interface",flags:{isExported:!0},typeParameter:[{id:1233,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1234,name:"data",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current selected data for the query.",text:"This should not be called in componentWillMount or a constructor, as the data will\nnot yet be available. This will throw an exception.\n"},sources:[{fileName:"plugins/graphql/index.ts",line:25,character:15}],type:{type:"typeParameter",name:"T"}}],groups:[{title:"Properties",kind:1024,children:[1234]}],sources:[{fileName:"plugins/graphql/index.ts",line:18,character:29}]},{id:1235,name:"GraphQLQueryOpts",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:1236,name:"props",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Function mapping from the controller or service that a query is added to to an object\ncontaining props for the query.",text:"By default, the query will use any relevant props provided to the parent, however you\nmay wish to take props from other services or perform some kind of calculation or remapping\non them.\n"},sources:[{fileName:"plugins/graphql/index.ts",line:37,character:7}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:1237,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1238,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1239,name:"parent",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}}],type:{type:"reference",name:"__type"}}]}}]}}],groups:[{title:"Properties",kind:1024,children:[1236]}],sources:[{fileName:"plugins/graphql/index.ts",line:28,character:33}]},{id:1230,name:"GraphQlPluginOpts",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:1231,name:"backendUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Remote backend URL to run queries against. Defaults to `/graphql`"},sources:[{fileName:"plugins/graphql/index.ts",line:11,character:12}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]}}],groups:[{title:"Properties",kind:1024,children:[1231]}],sources:[{fileName:"plugins/graphql/index.ts",line:7,character:34}]},{id:1274,name:"GraphQLResult",kind:4194304,kindString:"Type alias",flags:{isExported:!0},comment:{shortText:"Result of a GraphQL mutation"},sources:[{fileName:"plugins/graphql/index.ts",line:91,character:25}],type:{type:"union",types:[{type:"reflection",declaration:{id:1275,name:"__type",kind:65536,kindString:"Type literal",flags:{},children:[{id:1277,name:"data",kind:32,kindString:"Variable",flags:{},sources:[{fileName:"plugins/graphql/index.ts",line:92,character:31}],type:{type:"typeParameter",name:"T"}},{id:1276,name:"status",kind:32,kindString:"Variable",flags:{},sources:[{fileName:"plugins/graphql/index.ts",line:92,character:12}],type:{type:"stringLiteral",value:"succeeded"}}],groups:[{title:"Variables",kind:32,children:[1277,1276]}],sources:[{fileName:"plugins/graphql/index.ts",line:92,character:3}]}},{type:"reflection",declaration:{id:1278,name:"__type",kind:65536,kindString:"Type literal",flags:{},children:[{id:1280,name:"errors",kind:32,kindString:"Variable",flags:{},sources:[{fileName:"plugins/graphql/index.ts",line:93,character:30}],type:{type:"array",elementType:{type:"reference",name:"Error"}}},{id:1279,name:"status",kind:32,kindString:"Variable",flags:{},sources:[{fileName:"plugins/graphql/index.ts",line:93,character:12}],type:{type:"stringLiteral",value:"failed"}}],groups:[{title:"Variables",kind:32,children:[1280,1279]}],sources:[{fileName:"plugins/graphql/index.ts",line:93,character:3}]}}]}},{id:1262,name:"createGraphQLPlugin",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1263,name:"createGraphQLPlugin",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1264,name:"props",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"GraphQlPluginOpts",id:1230}}],type:{type:"reference",name:"PluginConstructor",id:105}}],sources:[{fileName:"plugins/graphql/index.ts",line:14,character:43}]},{id:1272,name:"graphQLClient",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1273,name:"graphQLClient",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Install a GraphQL client.",text:"In general, you should use either @query or @mutation to interact with GraphQL APIs.\nHowever in some plugins and services, it may be necessary to perform queries and mutations\nwith an imperative API.\n"},type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"plugins/graphql/index.ts",line:84,character:29}]},{id:1269,name:"mutation",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1270,name:"mutation",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Decorate a controller or service property to add a GraphQL mutation."},parameters:[{id:1271,name:"mutationDoc",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"plugins/graphql/index.ts",line:59,character:24}]},{id:1265,name:"query",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1266,name:"query",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Decorate a controller or service property to add a GraphQL data dependency.",text:"The data will be installed on the property as type GraphQLQuery.\n"},parameters:[{id:1267,name:"queryDoc",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1268,name:"opts",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"GraphQLQueryOpts",id:1235}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"plugins/graphql/index.ts",line:45,character:21}]}],groups:[{title:"Interfaces",kind:256,children:[1246,1240,1232,1235,1230]},{title:"Type aliases",kind:4194304,children:[1274]},{title:"Functions",kind:64,children:[1262,1272,1269,1265]}],sources:[{fileName:"plugins/graphql/index.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-plugins-graphql-index-05802142e8fecbbbcf56.js.map