webpackJsonp([25881880502388],{513:function(e,t){e.exports={pathContext:{docs:{id:1119,name:'"test-utils"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/test-utils.ts",children:[{id:1178,name:"ControllerTestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to a react component and mounting\ntest components using enzyme.",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:1179,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1185,name:"instance",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The subject of the test fixture (component, service, plugin, etc)"},sources:[{fileName:"test-utils.ts",line:26,character:19}],type:{type:"typeParameter",name:"T"},inheritedFrom:{type:"reference",name:"TestFixture.instance",id:1126}},{id:1231,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current page location"},sources:[{fileName:"test-utils.ts",line:65,character:10}],type:{type:"reference",name:"Location",id:687},inheritedFrom:{type:"reference",name:"TestFixture.location",id:1172}},{id:1186,name:"apply",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1187,name:"apply",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Apply a property decorator to instance and return the result of the decorated property."},typeParameter:[{id:1188,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1189,name:"decorator",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"PropertyDecorator"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1127}}],sources:[{fileName:"test-utils.ts",line:31,character:7}],inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1127}},{id:1195,name:"applySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1196,name:"applySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return the selected value."},typeParameter:[{id:1197,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1198,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1199,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1200,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1201,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1202,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1203,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1198}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:41,character:35}]}}},{id:1204,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1198}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1136}}],sources:[{fileName:"test-utils.ts",line:41,character:15}],inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1136}},{id:1190,name:"applyService",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1191,name:"applyService",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a service to instance and return the instance of the service."},typeParameter:[{id:1192,name:"S",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:691}}],parameters:[{id:1193,name:"serviceType",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1194,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:36,character:46}]}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"S",constraint:{type:"reference",name:"Service",id:691}}]},inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1131}}],sources:[{fileName:"test-utils.ts",line:36,character:14}],inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1131}},{id:1225,name:"getPlugin",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1226,name:"getPlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Get a plugin of a specified type. If it exists, it will be returned.\nIf it does not exist, an exception is thrown."},typeParameter:[{id:1227,name:"T",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:710}}],parameters:[{id:1228,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to search for.\n"},type:{type:"reference",name:"PluginConstructor",id:164,typeArguments:[{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:710}}]}}],type:{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:710}},inheritedFrom:{type:"reference",name:"TestFixture.getPlugin",id:1166}}],sources:[{fileName:"test-utils.ts",line:59,character:11}],inheritedFrom:{type:"reference",name:"TestFixture.getPlugin",id:1166}},{id:1215,name:"nextValueOf",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1216,name:"nextValueOf",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return a promise that resolves on the next value change."},typeParameter:[{id:1217,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1218,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1219,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1220,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1221,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1222,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1223,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1218}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:51,character:33}]}}},{id:1224,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1218}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1156}}],sources:[{fileName:"test-utils.ts",line:51,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1156}},{id:1180,name:"render",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1181,name:"render",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Render the test case into an Enzyme wrapper suitable for performing assertions against"},type:{type:"intrinsic",name:"any"}}],sources:[{fileName:"test-utils.ts",line:81,character:8}]},{id:1205,name:"spySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1206,name:"spySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return an array that fills with each new selected value."},typeParameter:[{id:1207,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1208,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1209,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1210,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1211,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1212,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1213,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1208}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:46,character:33}]}}},{id:1214,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1208}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"array",elementType:{type:"typeParameter",name:"T"}}]},inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1146}}],sources:[{fileName:"test-utils.ts",line:46,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1146}},{id:1229,name:"unmount",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1230,name:"unmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Unmount the test case"},type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"TestFixture.unmount",id:1170}}],sources:[{fileName:"test-utils.ts",line:62,character:9}],inheritedFrom:{type:"reference",name:"TestFixture.unmount",id:1170}},{id:1182,name:"waitForController",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1183,name:"waitForController",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Return a promise that resolves when a controller of a specific type has finished loading.\nUseful for waiting until an async action has completed before making a test assertion."},parameters:[{id:1184,name:"type",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ComponentClass"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"intrinsic",name:"void"}]}}],sources:[{fileName:"test-utils.ts",line:87,character:19}]}],groups:[{title:"Properties",kind:1024,children:[1185,1231]},{title:"Methods",kind:2048,children:[1186,1195,1190,1225,1215,1180,1205,1229,1182]}],sources:[{fileName:"test-utils.ts",line:79,character:38}],extendedTypes:[{type:"reference",name:"TestFixture",id:1124,typeArguments:[{type:"typeParameter",name:"T"}]}]},{id:1173,name:"ControllerTestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:1177,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Optional base url provided to application services. Defaults to http://localhost"},sources:[{fileName:"test-utils.ts",line:13,character:9}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.baseUrl",id:1123}},{id:1176,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Location string used to match route. Defaults to '/'"},sources:[{fileName:"test-utils.ts",line:10,character:10}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.location",id:1122}},{id:1174,name:"markup",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Markup to render in the specified fixture’s context"},sources:[{fileName:"test-utils.ts",line:70,character:8}],type:{type:"reference",name:"ReactElement",typeArguments:[{type:"reference",name:"__type"}]}},{id:1175,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:7,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:164}},inheritedFrom:{type:"reference",name:"TestFixtureProps.plugins",id:1121}}],groups:[{title:"Properties",kind:1024,children:[1177,1176,1174,1175]}],sources:[{fileName:"test-utils.ts",line:68,character:43}],extendedTypes:[{type:"reference",name:"TestFixtureProps",id:1120}]},{id:1240,name:"ServiceTestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to a service, including lifecycle hooks and injecting all dependencies",text:"You can optionally provide an array of plugins, which should generally be stub implementations\nof interfaces used in your applications. These can be stubbed using the `stub()` method.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:1241,name:"ServiceType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:691}}],children:[{id:1250,name:"instance",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The subject of the test fixture (component, service, plugin, etc)"},sources:[{fileName:"test-utils.ts",line:26,character:19}],type:{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:691}},inheritedFrom:{type:"reference",name:"TestFixture.instance",id:1126}},{id:1249,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current page location"},sources:[{fileName:"test-utils.ts",line:123,character:10}],type:{type:"reference",name:"Location",id:687},overwrites:{type:"reference",name:"TestFixture.location",id:1172}},{id:1242,name:"service",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"test-utils.ts",line:109,character:18}],type:{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:691}}},{id:1251,name:"apply",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1252,name:"apply",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Apply a property decorator to instance and return the result of the decorated property."},typeParameter:[{id:1253,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1254,name:"decorator",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"PropertyDecorator"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1127}}],sources:[{fileName:"test-utils.ts",line:31,character:7}],inheritedFrom:{type:"reference",name:"TestFixture.apply",id:1127}},{id:1260,name:"applySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1261,name:"applySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return the selected value."},typeParameter:[{id:1262,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1263,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1264,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1265,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1266,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1267,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1268,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1263}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:41,character:35}]}}},{id:1269,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1263}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1136}}],sources:[{fileName:"test-utils.ts",line:41,character:15}],inheritedFrom:{type:"reference",name:"TestFixture.applySelector",id:1136}},{id:1255,name:"applyService",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1256,name:"applyService",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a service to instance and return the instance of the service."},typeParameter:[{id:1257,name:"S",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:691}}],parameters:[{id:1258,name:"serviceType",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1259,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:36,character:46}]}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"S",constraint:{type:"reference",name:"Service",id:691}}]},inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1131}}],sources:[{fileName:"test-utils.ts",line:36,character:14}],inheritedFrom:{type:"reference",name:"TestFixture.applyService",id:1131}},{id:1243,name:"getPlugin",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1244,name:"getPlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Get a plugin of a specified type. If it exists, it will be returned.\nIf it does not exist, an exception is thrown."},typeParameter:[{id:1245,name:"PluginType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:710}}],parameters:[{id:1246,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to search for.\n"},type:{type:"reference",name:"PluginConstructor",id:164,typeArguments:[{type:"typeParameter",name:"PluginType",constraint:{type:"reference",name:"PluginConfig",id:710}}]}}],type:{type:"typeParameter",name:"PluginType",constraint:{type:"reference",name:"PluginConfig",id:710}},overwrites:{type:"reference",name:"TestFixture.getPlugin",id:1166}}],sources:[{fileName:"test-utils.ts",line:117,character:11}],overwrites:{type:"reference",name:"TestFixture.getPlugin",id:1166}},{id:1280,name:"nextValueOf",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1281,name:"nextValueOf",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return a promise that resolves on the next value change."},typeParameter:[{id:1282,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1283,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1284,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1285,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1286,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1287,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1288,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1283}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:51,character:33}]}}},{id:1289,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1283}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]},inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1156}}],sources:[{fileName:"test-utils.ts",line:51,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.nextValueOf",id:1156}},{id:1270,name:"spySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1271,name:"spySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return an array that fills with each new selected value."},typeParameter:[{id:1272,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1273,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1274,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1275,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1276,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1277,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1278,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1273}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:46,character:33}]}}},{id:1279,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1273}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"array",elementType:{type:"typeParameter",name:"T"}}]},inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1146}}],sources:[{fileName:"test-utils.ts",line:46,character:13}],inheritedFrom:{type:"reference",name:"TestFixture.spySelector",id:1146}},{id:1247,name:"unmount",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1248,name:"unmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Unmount the test case"},type:{type:"intrinsic",name:"void"},overwrites:{type:"reference",name:"TestFixture.unmount",id:1170}}],sources:[{fileName:"test-utils.ts",line:120,character:9}],overwrites:{type:"reference",name:"TestFixture.unmount",id:1170}}],groups:[{title:"Properties",kind:1024,children:[1250,1249,1242]},{title:"Methods",kind:2048,children:[1251,1260,1255,1243,1280,1270,1247]}],sources:[{fileName:"test-utils.ts",line:108,character:35}],extendedTypes:[{type:"reference",name:"TestFixture",id:1124,typeArguments:[{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:691}}]}]},{id:1232,name:"ServiceTestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},typeParameter:[{id:1233,name:"ServiceType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:691,typeArguments:[{type:"intrinsic",name:"any"}]}}],children:[{id:1239,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Optional base url provided to application services. Defaults to http://localhost"},sources:[{fileName:"test-utils.ts",line:13,character:9}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.baseUrl",id:1123}},{id:1238,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Location string used to match route. Defaults to '/'"},sources:[{fileName:"test-utils.ts",line:10,character:10}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]},inheritedFrom:{type:"reference",name:"TestFixtureProps.location",id:1122}},{id:1237,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:7,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:164}},inheritedFrom:{type:"reference",name:"TestFixtureProps.plugins",id:1121}},{id:1236,name:"props",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},sources:[{fileName:"test-utils.ts",line:97,character:7}],type:{type:"intrinsic",name:"any"}},{id:1234,name:"service",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Tested service"},sources:[{fileName:"test-utils.ts",line:96,character:9}],type:{type:"reflection",declaration:{id:1235,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:96,character:10}]}}}],groups:[{title:"Properties",kind:1024,children:[1239,1238,1237,1236,1234]}],sources:[{fileName:"test-utils.ts",line:94,character:40}],extendedTypes:[{type:"reference",name:"TestFixtureProps",id:1120}]},{id:1124,name:"TestFixture",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Utility class for providing the application context to classes that require it.",text:"You can optionally provide an array of plugins, which should generally be stub implementations\nof interfaces used in your applications. These can be stubbed using the `stub()` method.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:1125,name:"Instance",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:1126,name:"instance",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"The subject of the test fixture (component, service, plugin, etc)"},sources:[{fileName:"test-utils.ts",line:26,character:19}],type:{type:"typeParameter",name:"Instance"}},{id:1172,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Current page location"},sources:[{fileName:"test-utils.ts",line:65,character:10}],type:{type:"reference",name:"Location",id:687}},{id:1127,name:"apply",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1128,name:"apply",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Apply a property decorator to instance and return the result of the decorated property."},typeParameter:[{id:1129,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1130,name:"decorator",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"PropertyDecorator"}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]}}],sources:[{fileName:"test-utils.ts",line:31,character:7}]},{id:1136,name:"applySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1137,name:"applySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return the selected value."},typeParameter:[{id:1138,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1139,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1140,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1141,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1142,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1143,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1144,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1139}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:41,character:35}]}}},{id:1145,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1139}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]}}],sources:[{fileName:"test-utils.ts",line:41,character:15}]},{id:1131,name:"applyService",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1132,name:"applyService",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a service to instance and return the instance of the service."},typeParameter:[{id:1133,name:"S",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:691}}],parameters:[{id:1134,name:"serviceType",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1135,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"test-utils.ts",line:36,character:46}]}}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"S",constraint:{type:"reference",name:"Service",id:691}}]}}],sources:[{fileName:"test-utils.ts",line:36,character:14}]},{id:1166,name:"getPlugin",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1167,name:"getPlugin",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Get a plugin of a specified type. If it exists, it will be returned.\nIf it does not exist, an exception is thrown."},typeParameter:[{id:1168,name:"T",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"PluginConfig",id:710}}],parameters:[{id:1169,name:"constructor",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Type of the plugins to search for.\n"},type:{type:"reference",name:"PluginConstructor",id:164,typeArguments:[{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:710}}]}}],type:{type:"typeParameter",name:"T",constraint:{type:"reference",name:"PluginConfig",id:710}}}],sources:[{fileName:"test-utils.ts",line:59,character:11}]},{id:1156,name:"nextValueOf",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1157,name:"nextValueOf",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return a promise that resolves on the next value change."},typeParameter:[{id:1158,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1159,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1160,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1161,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1162,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1163,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1164,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1159}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:51,character:33}]}}},{id:1165,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1159}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"typeParameter",name:"T"}]}}],sources:[{fileName:"test-utils.ts",line:51,character:13}]},{id:1146,name:"spySelector",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1147,name:"spySelector",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Create and attach a selector to instance and return an array that fills with each new selected value."},typeParameter:[{id:1148,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:1149,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:1150,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reflection",declaration:{id:1151,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:1152,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:1153,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:1154,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1149}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"test-utils.ts",line:46,character:33}]}}},{id:1155,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:1149}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"array",elementType:{type:"typeParameter",name:"T"}}]}}],sources:[{fileName:"test-utils.ts",line:46,character:13}]},{id:1170,name:"unmount",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:1171,name:"unmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Unmount the test case"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"test-utils.ts",line:62,character:9}]}],groups:[{title:"Properties",kind:1024,children:[1126,1172]},{title:"Methods",kind:2048,children:[1127,1136,1131,1166,1156,1146,1170]}],sources:[{fileName:"test-utils.ts",line:24,character:28}],extendedBy:[{type:"reference",name:"ControllerTestFixture",id:1178},{type:"reference",name:"ServiceTestFixture",id:1240}]},{id:1120,name:"TestFixtureProps",kind:256,kindString:"Interface",flags:{isExported:!0},children:[{id:1123,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Optional base url provided to application services. Defaults to http://localhost"
},sources:[{fileName:"test-utils.ts",line:13,character:9}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]}},{id:1122,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Location string used to match route. Defaults to '/'"},sources:[{fileName:"test-utils.ts",line:10,character:10}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]}},{id:1121,name:"plugins",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},comment:{shortText:"Array of plugins to provide to the test context"},sources:[{fileName:"test-utils.ts",line:7,character:9}],type:{type:"array",elementType:{type:"reference",name:"PluginConstructor",id:164}}}],groups:[{title:"Properties",kind:1024,children:[1123,1122,1121]}],sources:[{fileName:"test-utils.ts",line:5,character:33}],extendedBy:[{type:"reference",name:"ControllerTestFixtureProps",id:1173},{type:"reference",name:"ServiceTestFixtureProps",id:1232}]},{id:1290,name:"controllerTestFixture",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1291,name:"controllerTestFixture",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1292,name:"Controller",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Component"}}],parameters:[{id:1293,name:"props",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ControllerTestFixtureProps",id:1173}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"ControllerTestFixture",id:1178,typeArguments:[{type:"typeParameter",name:"Controller",constraint:{type:"reference",name:"Component"}}]}]}}],sources:[{fileName:"test-utils.ts",line:90,character:37}]},{id:1294,name:"serviceTestFixture",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:1295,name:"serviceTestFixture",kind:4096,kindString:"Call signature",flags:{},typeParameter:[{id:1296,name:"ServiceType",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Service",id:691}}],parameters:[{id:1297,name:"props",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ServiceTestFixtureProps",id:1232,typeArguments:[{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:691}}]}}],type:{type:"reference",name:"Promise",typeArguments:[{type:"reference",name:"ServiceTestFixture",id:1240,typeArguments:[{type:"typeParameter",name:"ServiceType",constraint:{type:"reference",name:"Service",id:691}}]}]}}],sources:[{fileName:"test-utils.ts",line:126,character:34}]}],groups:[{title:"Interfaces",kind:256,children:[1178,1173,1240,1232,1124,1120]},{title:"Functions",kind:64,children:[1290,1294]}],sources:[{fileName:"test-utils.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-test-utils-1dec33ccd11ed7f23c37.js.map