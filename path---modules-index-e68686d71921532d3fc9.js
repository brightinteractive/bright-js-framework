webpackJsonp([37692960299797],{505:function(e,t){e.exports={pathContext:{docs:{id:680,name:'"index"',kind:1,kindString:"External module",flags:{isExported:!0},originalName:"/home/travis/build/brightinteractive/bright-js-framework/src/index.ts",children:[{id:729,name:"Action",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Object describing a mutation to the application datastore."},indexSignature:[{id:731,name:"__index",kind:8192,kindString:"Index signature",flags:{},comment:{shortText:"Object describing a mutation to the application datastore."},parameters:[{id:732,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"string"}}],type:{type:"union",types:[{type:"intrinsic",name:"any"},{type:"intrinsic",name:"undefined"}]}}],children:[{id:730,name:"type",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:210,character:6}],type:{type:"intrinsic",name:"string"}}],groups:[{title:"Properties",kind:1024,children:[730]}],sources:[{fileName:"index.ts",line:209,character:23}]},{id:746,name:"BrowserActions",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Service for performing actions on the browser. Works across all environments.",tags:[{tag:"class",text:"\n"}]},children:[{id:753,name:"goBack",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:754,name:"goBack",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Equivalent to the browser back button"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:302,character:8}]},{id:755,name:"goForward",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:756,name:"goForward",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Equivalent to the browser forward button"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:305,character:11}]},{id:747,name:"pushLocation",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:748,name:"pushLocation",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Navigate to *location*, pushing a new entry onto the history stack"},parameters:[{id:749,name:"location",kind:32768,kindString:"Parameter",flags:{},type:{type:"union",types:[{type:"intrinsic",name:"string"},{type:"reference",name:"Partial",typeArguments:[{type:"reference",name:"Location",id:687}]}]}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:296,character:14}]},{id:750,name:"replaceLocation",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:751,name:"replaceLocation",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Navigate to *location*, without pushing a new entry onto the history stack"},parameters:[{id:752,name:"location",kind:32768,kindString:"Parameter",flags:{},type:{type:"union",types:[{type:"intrinsic",name:"string"},{type:"reference",name:"Partial",typeArguments:[{type:"reference",name:"Location",id:687}]}]}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:299,character:17}]}],groups:[{title:"Methods",kind:2048,children:[753,755,747,750]}],sources:[{fileName:"index.ts",line:294,character:31},{fileName:"index.ts",line:308,character:27}],defaultValue:" _BrowserActions"},{id:742,name:"Dispatcher",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Dispatcher function injected by the @dispatcher() decorator"},typeParameter:[{id:743,name:"A",kind:131072,kindString:"Type parameter",flags:{},type:{type:"reference",name:"Action",id:729}}],signatures:[{id:744,name:"__call",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Dispatcher function injected by the @dispatcher() decorator"},parameters:[{id:745,name:"action",kind:32768,kindString:"Parameter",flags:{},type:{type:"typeParameter",name:"A",constraint:{type:"reference",name:"Action",id:729}}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:232,character:27}]},{id:757,name:"HostInfo",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Service providing information about the host"},children:[{id:762,name:"baseUrl",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:321,character:9}],type:{type:"intrinsic",name:"string"}},{id:759,name:"host",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:318,character:6}],type:{type:"intrinsic",name:"string"}},{id:758,name:"hostname",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:317,character:10}],type:{type:"intrinsic",name:"string"}},{id:761,name:"port",kind:1024,kindString:"Property",flags:{isExported:!0,isOptional:!0},sources:[{fileName:"index.ts",line:320,character:6}],type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"intrinsic",name:"string"}]}},{id:760,name:"protocol",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:319,character:10}],type:{type:"intrinsic",name:"string"}}],groups:[{title:"Properties",kind:1024,children:[762,759,758,761,760]}],sources:[{fileName:"index.ts",line:316,character:25}]},{id:687,name:"Location",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Components of parsed page location"},children:[{id:690,name:"hash",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Hash string extracted from page URL"},sources:[{fileName:"index.ts",line:74,character:6}],type:{type:"intrinsic",name:"string"}},{id:688,name:"pathname",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Path extracted from page URL"},sources:[{fileName:"index.ts",line:68,character:10}],type:{type:"intrinsic",name:"string"}},{id:689,name:"search",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Query string extracted from page URL"},sources:[{fileName:"index.ts",line:71,character:8}],type:{type:"intrinsic",name:"string"}}],groups:[{title:"Properties",kind:1024,children:[690,688,689]}],sources:[{fileName:"index.ts",line:66,character:25}]},{id:710,name:"PluginConfig",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Configuration class for providing additonal features (such as data-fetching, authentication\nproviders, etc) to an application.",text:"Plugins declare dependencies by using the @exported decorator.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:711,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:727,name:"Service",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:163,character:20}],type:{type:"reflection",declaration:{id:728,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"index.ts",line:163,character:21}]}},defaultValue:" _Service"},{id:724,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:157,character:9}],type:{type:"reference",name:"ServiceContext",id:708},inheritedFrom:{type:"reference",name:"Service.context",id:705}},{id:725,name:"controllerProps",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:158,character:17}],type:{type:"reference",name:"__type"},inheritedFrom:{type:"reference",name:"Service.controllerProps",id:706}},{id:726,name:"parent",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:159,character:8}],type:{type:"reference",name:"__type"},inheritedFrom:{type:"reference",name:"Service.parent",id:707}},{id:720,name:"state",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:154,character:16}],type:{type:"typeParameter",name:"T"},inheritedFrom:{type:"reference",name:"Service.state",id:701}},{id:716,name:"serviceDidMount",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:717,name:"serviceDidMount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called after a service’s parent controller mounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentDidMount()\n"},type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"Service.serviceDidMount",id:697}}],sources:[{fileName:"index.ts",line:145,character:17}],inheritedFrom:{type:"reference",name:"Service.serviceDidMount",id:697}},{id:712,name:"serviceWillLoad",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:713,name:"serviceWillLoad",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called recursively on all components that are due to be rendered before any of them is rendered.",text:"If this method is async (IE if it returns a promise) then serviceWillLoad will not be called on children until\nall parents have completed.\n"},type:{type:"union",types:[{type:"intrinsic",name:"void"},{type:"reference",name:"Promise",typeArguments:[{type:"union",types:[{type:"intrinsic",name:"void"},{type:"intrinsic",name:"undefined"},{type:"reference",name:"__type"}]}]}]},inheritedFrom:{type:"reference",name:"Service.serviceWillLoad",id:693}}],sources:[{fileName:"index.ts",line:131,character:17}],inheritedFrom:{type:"reference",name:"Service.serviceWillLoad",id:693}},{id:714,name:"serviceWillMount",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:715,name:"serviceWillMount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called before a service’s parent controller mounts or before it is statically rendered.",text:"Corresponds to React’s componentWillMount()\n"},type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"Service.serviceWillMount",id:695}}],sources:[{fileName:"index.ts",line:138,character:18}],inheritedFrom:{type:"reference",name:"Service.serviceWillMount",id:695}},{id:718,name:"serviceWillUnmount",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:719,name:"serviceWillUnmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called before a service’s parent controller unmounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentWillUnmount()\n"},type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"Service.serviceWillUnmount",id:699}}],sources:[{fileName:"index.ts",line:152,character:20}],inheritedFrom:{type:"reference",name:"Service.serviceWillUnmount",id:699}},{id:721,name:"setState",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:722,name:"setState",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:723,name:"state",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"Partial",typeArguments:[{type:"typeParameter",name:"T"}]}}],type:{type:"intrinsic",name:"void"},inheritedFrom:{type:"reference",name:"Service.setState",id:702}}],sources:[{fileName:"index.ts",line:155,character:10}],inheritedFrom:{type:"reference",name:"Service.setState",id:702}}],groups:[{title:"Properties",kind:1024,children:[727,724,725,726,720]},{title:"Methods",kind:2048,children:[716,712,714,718,721]}],sources:[{fileName:"index.ts",line:178,character:29},{fileName:"index.ts",line:179,character:25}],defaultValue:" _PluginConfig",extendedTypes:[{type:"reference",name:"Service",id:691,typeArguments:[{type:"typeParameter",name:"T"}]}]},{id:681,name:"RouteProps",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Props passed into a component annotated with @route",tags:[{tag:"param",text:"Types of route parameters",param:"Params"},{tag:"param",text:"Expected types of query params object\n",param:"Query"}]},typeParameter:[{id:682,name:"ParamKeys",kind:131072,kindString:"Type parameter",flags:{},type:{type:"intrinsic",name:"string"}},{id:683,name:"QueryKeys",kind:131072,kindString:"Type parameter",flags:{},type:{type:"intrinsic",name:"string"}}],children:[{id:684,name:"location",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Location of the current matched route"},sources:[{fileName:"index.ts",line:54,character:10}],type:{type:"reference",name:"Location",id:687}},{id:685,name:"pathParams",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Values extracted from path components"},sources:[{fileName:"index.ts",line:57,character:12}],type:{type:"reference",name:"Record",typeArguments:[{type:"typeParameter",name:"ParamKeys",constraint:{type:"intrinsic",name:"string"}},{type:"intrinsic",name:"string"}]}},{id:686,name:"queryParams",kind:1024,kindString:"Property",flags:{isExported:!0},comment:{shortText:"Values extracted from url query params"},sources:[{fileName:"index.ts",line:60,character:13}],type:{type:"reference",name:"Record",typeArguments:[{type:"typeParameter",name:"QueryKeys",constraint:{type:"intrinsic",name:"string"}},{type:"intrinsic",name:"string"}]}}],groups:[{title:"Properties",kind:1024,children:[684,685,686]}],sources:[{fileName:"index.ts",line:52,character:27}]},{id:733,name:"SelectFn",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Function describing how to select data from the application datastore.",text:"Passed to the @select() decorator\n"},typeParameter:[{id:734,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:735,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],signatures:[{id:736,name:"__call",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Function describing how to select data from the application datastore.",text:"Passed to the @select() decorator\n"},parameters:[{id:737,name:"state",kind:32768,kindString:"Parameter",flags:{},type:{type:"intrinsic",name:"any"}},{id:738,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"reference",name:"Props",id:735}}],type:{type:"typeParameter",name:"T"}}],sources:[{fileName:"index.ts",line:219,character:25}]},{id:691,name:"Service",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Base class for creating Services.",text:"Services are classes that have access to a subset of the React Component API.\nThey are owned by a parent component, and receive lifecycle events.\n",tags:[{tag:"class",text:"\n"}]},typeParameter:[{id:692,name:"State",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:705,name:"context",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:157,character:9}],type:{type:"reference",name:"ServiceContext",id:708}},{id:706,name:"controllerProps",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:158,character:17}],type:{type:"reference",name:"__type"}},{id:707,name:"parent",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:159,character:8}],type:{type:"reference",name:"__type"}},{id:701,name:"state",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:154,character:16}],type:{type:"typeParameter",name:"State"}},{id:697,name:"serviceDidMount",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:698,name:"serviceDidMount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called after a service’s parent controller mounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentDidMount()\n"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:145,character:17}]},{id:693,name:"serviceWillLoad",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:694,name:"serviceWillLoad",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called recursively on all components that are due to be rendered before any of them is rendered.",text:"If this method is async (IE if it returns a promise) then serviceWillLoad will not be called on children until\nall parents have completed.\n"},type:{type:"union",types:[{type:"intrinsic",name:"void"},{type:"reference",name:"Promise",typeArguments:[{type:"union",types:[{type:"intrinsic",name:"void"},{type:"intrinsic",name:"undefined"},{type:"reference",name:"__type"}]}]}]}}],sources:[{fileName:"index.ts",line:131,character:17}]},{id:695,name:"serviceWillMount",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:696,name:"serviceWillMount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called before a service’s parent controller mounts or before it is statically rendered.",text:"Corresponds to React’s componentWillMount()\n"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:138,character:18}]},{id:699,name:"serviceWillUnmount",kind:2048,kindString:"Method",flags:{isExported:!0,isOptional:!0},signatures:[{id:700,name:"serviceWillUnmount",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Called before a service’s parent controller unmounts. Not called when the component is statically rendered.",text:"Corresponds to React’s componentWillUnmount()\n"},type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:152,character:20}]},{id:702,name:"setState",kind:2048,kindString:"Method",flags:{isExported:!0},signatures:[{id:703,name:"setState",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:704,name:"state",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"Partial",typeArguments:[{type:"typeParameter",name:"State"}]}}],type:{type:"intrinsic",name:"void"}}],sources:[{fileName:"index.ts",line:155,character:10}]}],groups:[{title:"Properties",kind:1024,children:[705,706,707,701]},{title:"Methods",kind:2048,children:[697,693,695,699,702]}],sources:[{fileName:"index.ts",line:124,character:24},{fileName:"index.ts",line:163,character:20}],defaultValue:" _Service",extendedBy:[{type:"reference",name:"PluginConfig",id:710}]},{id:708,name:"ServiceContext",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Opaque object passed into service constructors"},children:[{id:709,name:"@appContext",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:167,character:15}],type:{type:"intrinsic",name:"any"}}],groups:[{title:"Properties",kind:1024,children:[709]}],sources:[{fileName:"index.ts",line:166,character:31}]},{id:739,name:"StateSelection",kind:256,kindString:"Interface",flags:{isExported:!0},comment:{shortText:"Service created by the @select decorator containing current value of\nan application state subscription."},typeParameter:[{id:740,name:"T",kind:131072,kindString:"Type parameter",flags:{}}],children:[{id:741,name:"value",kind:1024,kindString:"Property",flags:{isExported:!0},sources:[{fileName:"index.ts",line:228,character:7}],type:{type:"typeParameter",name:"T"}}],groups:[{title:"Properties",kind:1024,children:[741]}],sources:[{fileName:"index.ts",line:227,character:31}]},{id:774,name:"PluginConstructor",kind:4194304,kindString:"Type alias",flags:{isExported:!0},sources:[{fileName:"index.ts",line:181,character:29}],type:{type:"reflection",declaration:{id:775,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"index.ts",line:181,character:70}]}}},{id:772,name:"ServiceConstructor",kind:4194304,kindString:"Type alias",flags:{isExported:!0},sources:[{fileName:"index.ts",line:162,character:30}],type:{type:"reflection",declaration:{id:773,name:"__type",kind:65536,kindString:"Type literal",flags:{},sources:[{fileName:"index.ts",line:162,character:44}]}}},{id:766,name:"Link",kind:32,kindString:"Variable",flags:{isExported:!0},comment:{shortText:"Drop-in replacement for HTML anchor element that makes frontend page transitions\ninstead of forcing a new page load. The accepted properties and behavior of the Link\nelement are otherwise identical to the anchor element."},sources:[{fileName:"index.ts",line:82,character:17}],type:{type:"reference",name:"ComponentClass",typeArguments:[{type:"reference",name:"HTMLProps",typeArguments:[{type:"reference",name:"__type"}]}]},defaultValue:" _Link"},{id:796,name:"location",kind:32,kindString:"Variable",flags:{isExported:!0},comment:{shortText:"Select the current page location"},sources:[{fileName:"index.ts",line:313,character:21}],type:{type:"reference",name:"SelectFn",id:733,typeArguments:[{type:"reference",name:"Location",id:687}]},defaultValue:" locationSelect"},{id:767,name:"controller",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:768,name:"controller",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare that a component is a controller.",text:"You must annotate a React Component as a controller before attaching services to it.\nYou do not need to annotate a service before attaching other services to it.\n"},type:{type:"reference",name:"ClassDecorator"}}],sources:[{fileName:"index.ts",line:90,character:26}]},{id:794,name:"dispatcher",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:795,name:"dispatcher",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Injects the application’s action dispatcher into a controller or service"},type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:285,character:26}]},{id:776,name:"exported",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:777,name:"exported",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare that a property of a PluginConfig is available for injection into components\nand services."},parameters:[{id:778,name:"id",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Identifier used to inject the dependency when provided to @inject decorator.\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:189,character:24}]},{id:797,name:"hostInfo",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:798,name:"hostInfo",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Service providing information about the host"},type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:325,character:24}]},{id:779,name:"inject",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:780,name:"inject",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare that a property of a Controller, Service or PluginContext should be fulfilled\nusing dependency injection.",text:"Objects injected by plugins are shared between the whole application.\nThis differs from services, which are unique to each controller.\n"},parameters:[{id:781,name:"key",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"__type"}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:202,character:22}]},{id:763,name:"route",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:764,name:"route",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare a component as a route and associate a path with it.\nAll components in your project's pages directory (by default, `src/pages`)\nthat are decorated with @route will be served to users.",text:"```\n  interface MyRouteParams {\n    name: string\n  }\n\n  @route('/sayHello/:name')\n  class MyRoute extends React.PureComponent<RouteProps<MyRouteParams>> {\n    render() {\n      return <div>Hello, {this.props.pathParams.name}</div>\n    }\n  }\n```\n"},parameters:[{id:765,name:"path",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Path pattern to serve the route from\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"ClassDecorator"}}],sources:[{fileName:"index.ts",line:40,character:21}]},{id:785,name:"select",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:786,name:"select",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Injects a StateSelector into the component",text:"```\n class Counter extends React.PureComponent {\n   @select(Counter.getValue)\n   counter: StateSelector<number>\n\n   render() {\n     return <div>{this.counter.value}</div>\n   }\n }\n```\n"},typeParameter:[{id:787,name:"T",kind:131072,kindString:"Type parameter",flags:{}},{id:788,name:"Props",kind:131072,kindString:"Type parameter",flags:{}}],parameters:[{id:789,name:"selectFn",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"SelectFn",id:733,typeArguments:[{type:"typeParameter",name:"T"},{type:"typeParameter",name:"Props"}]}},{id:790,name:"props",kind:32768,kindString:"Parameter",flags:{isOptional:!0},type:{type:"union",types:[{type:"intrinsic",name:"undefined"},{type:"reflection",declaration:{id:791,name:"__type",kind:65536,kindString:"Type literal",flags:{},signatures:[{id:792,name:"__call",kind:4096,kindString:"Call signature",flags:{},parameters:[{id:793,name:"x",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"__type"}}],type:{type:"typeParameter",name:"Props"}}]}}]}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:278,character:22}]},{id:769,name:"service",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:770,name:"service",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Attach a service to a property of a controller or other service.",text:"You must annotate a React Component as a controller before attaching services to it.\nYou do not need to annotate a service before attaching other services to it.\n\nServices are unique to the controller that they are attached to.\nThis differs from dependencies injected using plugins, which are shared amongst the whole\napplication.\n\n```\n @controller()\n class Foo extends React.Component {\n   @service(MyService)\n   myService: MyService\n }\n```\n"},parameters:[{id:771,name:"constructor",kind:32768,kindString:"Parameter",flags:{},type:{type:"reference",name:"ServiceConstructor",id:772}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:112,character:23}]},{id:782,name:"state",kind:64,kindString:"Function",flags:{isExported:!0},signatures:[{id:783,name:"state",kind:4096,kindString:"Call signature",flags:{},comment:{shortText:"Declare how to manage state changes for an aspect of application state.",text:"State changes are managed using reducer functions, which take the previous state\nof part of the application store and an action describing a mutation, then return\nthe next state of the store.\n\nState reducers are defined by decorating a static method of a plugin with a `@state()` decorator.\n\n```\n class CounterPlugin extends PluginConfig {\n   @state()\n   static update(state: number = 0, action: Action) {\n     if (action.type === 'counter:increment') {\n       return state + 1\n     }\n\n     return state\n   }\n }\n```\n"},parameters:[{id:784,name:"key",kind:32768,kindString:"Parameter",flags:{},comment:{text:"Key of the application’s store to manage using the decorated function\n"},type:{type:"intrinsic",name:"string"}}],type:{type:"reference",name:"PropertyDecorator"}}],sources:[{fileName:"index.ts",line:260,character:21}]}],groups:[{title:"Interfaces",kind:256,children:[729,746,742,757,687,710,681,733,691,708,739]},{title:"Type aliases",kind:4194304,children:[774,772]},{title:"Variables",kind:32,children:[766,796]},{title:"Functions",kind:64,children:[767,794,776,797,779,763,785,769,782]}],sources:[{fileName:"index.ts",line:1,character:0}]}}}}});
//# sourceMappingURL=path---modules-index-e68686d71921532d3fc9.js.map